// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/monitored_resource.proto

#include "google/api/monitored_resource.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2flabel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LabelDescriptor_google_2fapi_2flabel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fmonitored_5fresource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MonitoredResource_LabelsEntry_DoNotUse_google_2fapi_2fmonitored_5fresource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fmonitored_5fresource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MonitoredResourceMetadata_UserLabelsEntry_DoNotUse_google_2fapi_2fmonitored_5fresource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fstruct_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto;
namespace google {
namespace api {
class MonitoredResourceDescriptorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MonitoredResourceDescriptor> _instance;
} _MonitoredResourceDescriptor_default_instance_;
class MonitoredResource_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MonitoredResource_LabelsEntry_DoNotUse> _instance;
} _MonitoredResource_LabelsEntry_DoNotUse_default_instance_;
class MonitoredResourceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MonitoredResource> _instance;
} _MonitoredResource_default_instance_;
class MonitoredResourceMetadata_UserLabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MonitoredResourceMetadata_UserLabelsEntry_DoNotUse> _instance;
} _MonitoredResourceMetadata_UserLabelsEntry_DoNotUse_default_instance_;
class MonitoredResourceMetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MonitoredResourceMetadata> _instance;
} _MonitoredResourceMetadata_default_instance_;
}  // namespace api
}  // namespace google
static void InitDefaultsscc_info_MonitoredResource_google_2fapi_2fmonitored_5fresource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_MonitoredResource_default_instance_;
    new (ptr) ::google::api::MonitoredResource();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::MonitoredResource::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MonitoredResource_google_2fapi_2fmonitored_5fresource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MonitoredResource_google_2fapi_2fmonitored_5fresource_2eproto}, {
      &scc_info_MonitoredResource_LabelsEntry_DoNotUse_google_2fapi_2fmonitored_5fresource_2eproto.base,}};

static void InitDefaultsscc_info_MonitoredResource_LabelsEntry_DoNotUse_google_2fapi_2fmonitored_5fresource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_MonitoredResource_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::MonitoredResource_LabelsEntry_DoNotUse();
  }
  ::google::api::MonitoredResource_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MonitoredResource_LabelsEntry_DoNotUse_google_2fapi_2fmonitored_5fresource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MonitoredResource_LabelsEntry_DoNotUse_google_2fapi_2fmonitored_5fresource_2eproto}, {}};

static void InitDefaultsscc_info_MonitoredResourceDescriptor_google_2fapi_2fmonitored_5fresource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_MonitoredResourceDescriptor_default_instance_;
    new (ptr) ::google::api::MonitoredResourceDescriptor();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::MonitoredResourceDescriptor::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MonitoredResourceDescriptor_google_2fapi_2fmonitored_5fresource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MonitoredResourceDescriptor_google_2fapi_2fmonitored_5fresource_2eproto}, {
      &scc_info_LabelDescriptor_google_2fapi_2flabel_2eproto.base,}};

static void InitDefaultsscc_info_MonitoredResourceMetadata_google_2fapi_2fmonitored_5fresource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_MonitoredResourceMetadata_default_instance_;
    new (ptr) ::google::api::MonitoredResourceMetadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::MonitoredResourceMetadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_MonitoredResourceMetadata_google_2fapi_2fmonitored_5fresource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_MonitoredResourceMetadata_google_2fapi_2fmonitored_5fresource_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,
      &scc_info_MonitoredResourceMetadata_UserLabelsEntry_DoNotUse_google_2fapi_2fmonitored_5fresource_2eproto.base,}};

static void InitDefaultsscc_info_MonitoredResourceMetadata_UserLabelsEntry_DoNotUse_google_2fapi_2fmonitored_5fresource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_MonitoredResourceMetadata_UserLabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse();
  }
  ::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MonitoredResourceMetadata_UserLabelsEntry_DoNotUse_google_2fapi_2fmonitored_5fresource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MonitoredResourceMetadata_UserLabelsEntry_DoNotUse_google_2fapi_2fmonitored_5fresource_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2fapi_2fmonitored_5fresource_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_google_2fapi_2fmonitored_5fresource_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fmonitored_5fresource_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2fapi_2fmonitored_5fresource_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceDescriptor, name_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceDescriptor, type_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceDescriptor, display_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceDescriptor, description_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceDescriptor, labels_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResource_LabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResource_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResource_LabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResource_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResource, type_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResource, labels_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceMetadata, system_labels_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceMetadata, user_labels_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::MonitoredResourceDescriptor)},
  { 10, 17, sizeof(::google::api::MonitoredResource_LabelsEntry_DoNotUse)},
  { 19, -1, sizeof(::google::api::MonitoredResource)},
  { 26, 33, sizeof(::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse)},
  { 35, -1, sizeof(::google::api::MonitoredResourceMetadata)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_MonitoredResourceDescriptor_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_MonitoredResource_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_MonitoredResource_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_MonitoredResourceMetadata_UserLabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_MonitoredResourceMetadata_default_instance_),
};

const char descriptor_table_protodef_google_2fapi_2fmonitored_5fresource_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#google/api/monitored_resource.proto\022\ng"
  "oogle.api\032\026google/api/label.proto\032\034googl"
  "e/protobuf/struct.proto\"\221\001\n\033MonitoredRes"
  "ourceDescriptor\022\014\n\004name\030\005 \001(\t\022\014\n\004type\030\001 "
  "\001(\t\022\024\n\014display_name\030\002 \001(\t\022\023\n\013description"
  "\030\003 \001(\t\022+\n\006labels\030\004 \003(\0132\033.google.api.Labe"
  "lDescriptor\"\213\001\n\021MonitoredResource\022\014\n\004typ"
  "e\030\001 \001(\t\0229\n\006labels\030\002 \003(\0132).google.api.Mon"
  "itoredResource.LabelsEntry\032-\n\013LabelsEntr"
  "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\312\001\n\031Mo"
  "nitoredResourceMetadata\022.\n\rsystem_labels"
  "\030\001 \001(\0132\027.google.protobuf.Struct\022J\n\013user_"
  "labels\030\002 \003(\01325.google.api.MonitoredResou"
  "rceMetadata.UserLabelsEntry\0321\n\017UserLabel"
  "sEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001By"
  "\n\016com.google.apiB\026MonitoredResourceProto"
  "P\001ZCgoogle.golang.org/genproto/googleapi"
  "s/api/monitoredres;monitoredres\370\001\001\242\002\004GAP"
  "Ib\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_deps[2] = {
  &::descriptor_table_google_2fapi_2flabel_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_sccs[5] = {
  &scc_info_MonitoredResource_google_2fapi_2fmonitored_5fresource_2eproto.base,
  &scc_info_MonitoredResource_LabelsEntry_DoNotUse_google_2fapi_2fmonitored_5fresource_2eproto.base,
  &scc_info_MonitoredResourceDescriptor_google_2fapi_2fmonitored_5fresource_2eproto.base,
  &scc_info_MonitoredResourceMetadata_google_2fapi_2fmonitored_5fresource_2eproto.base,
  &scc_info_MonitoredResourceMetadata_UserLabelsEntry_DoNotUse_google_2fapi_2fmonitored_5fresource_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_once;
static bool descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto = {
  &descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_initialized, descriptor_table_protodef_google_2fapi_2fmonitored_5fresource_2eproto, "google/api/monitored_resource.proto", 729,
  &descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_once, descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_sccs, descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_deps, 5, 2,
  schemas, file_default_instances, TableStruct_google_2fapi_2fmonitored_5fresource_2eproto::offsets,
  file_level_metadata_google_2fapi_2fmonitored_5fresource_2eproto, 5, file_level_enum_descriptors_google_2fapi_2fmonitored_5fresource_2eproto, file_level_service_descriptors_google_2fapi_2fmonitored_5fresource_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fapi_2fmonitored_5fresource_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto), true);
namespace google {
namespace api {

// ===================================================================

void MonitoredResourceDescriptor::InitAsDefaultInstance() {
}
class MonitoredResourceDescriptor::_Internal {
 public:
};

void MonitoredResourceDescriptor::clear_labels() {
  labels_.Clear();
}
MonitoredResourceDescriptor::MonitoredResourceDescriptor()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.MonitoredResourceDescriptor)
}
MonitoredResourceDescriptor::MonitoredResourceDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  labels_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.MonitoredResourceDescriptor)
}
MonitoredResourceDescriptor::MonitoredResourceDescriptor(const MonitoredResourceDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      labels_(from.labels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArenaNoVirtual());
  }
  display_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_display_name().empty()) {
    display_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_display_name(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArenaNoVirtual());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.MonitoredResourceDescriptor)
}

void MonitoredResourceDescriptor::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MonitoredResourceDescriptor_google_2fapi_2fmonitored_5fresource_2eproto.base);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MonitoredResourceDescriptor::~MonitoredResourceDescriptor() {
  // @@protoc_insertion_point(destructor:google.api.MonitoredResourceDescriptor)
  SharedDtor();
}

void MonitoredResourceDescriptor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MonitoredResourceDescriptor::ArenaDtor(void* object) {
  MonitoredResourceDescriptor* _this = reinterpret_cast< MonitoredResourceDescriptor* >(object);
  (void)_this;
}
void MonitoredResourceDescriptor::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MonitoredResourceDescriptor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MonitoredResourceDescriptor& MonitoredResourceDescriptor::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MonitoredResourceDescriptor_google_2fapi_2fmonitored_5fresource_2eproto.base);
  return *internal_default_instance();
}


void MonitoredResourceDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.MonitoredResourceDescriptor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  display_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

const char* MonitoredResourceDescriptor::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.MonitoredResourceDescriptor.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string display_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_display_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.MonitoredResourceDescriptor.display_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.MonitoredResourceDescriptor.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .google.api.LabelDescriptor labels = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_labels(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // string name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.MonitoredResourceDescriptor.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MonitoredResourceDescriptor::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.MonitoredResourceDescriptor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type(), target);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_display_name().data(), static_cast<int>(this->_internal_display_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.display_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_display_name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // repeated .google.api.LabelDescriptor labels = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_labels_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_labels(i), target, stream);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.MonitoredResourceDescriptor)
  return target;
}

size_t MonitoredResourceDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.MonitoredResourceDescriptor)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.LabelDescriptor labels = 4;
  total_size += 1UL * this->_internal_labels_size();
  for (const auto& msg : this->labels_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_display_name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MonitoredResourceDescriptor::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.MonitoredResourceDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  const MonitoredResourceDescriptor* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MonitoredResourceDescriptor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.MonitoredResourceDescriptor)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.MonitoredResourceDescriptor)
    MergeFrom(*source);
  }
}

void MonitoredResourceDescriptor::MergeFrom(const MonitoredResourceDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.MonitoredResourceDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.display_name().size() > 0) {
    _internal_set_display_name(from._internal_display_name());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void MonitoredResourceDescriptor::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.MonitoredResourceDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonitoredResourceDescriptor::CopyFrom(const MonitoredResourceDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.MonitoredResourceDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitoredResourceDescriptor::IsInitialized() const {
  return true;
}

void MonitoredResourceDescriptor::InternalSwap(MonitoredResourceDescriptor* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  labels_.InternalSwap(&other->labels_);
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata MonitoredResourceDescriptor::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

MonitoredResource_LabelsEntry_DoNotUse::MonitoredResource_LabelsEntry_DoNotUse() {}
MonitoredResource_LabelsEntry_DoNotUse::MonitoredResource_LabelsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MonitoredResource_LabelsEntry_DoNotUse::MergeFrom(const MonitoredResource_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MonitoredResource_LabelsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MonitoredResource_LabelsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void MonitoredResource::InitAsDefaultInstance() {
}
class MonitoredResource::_Internal {
 public:
};

MonitoredResource::MonitoredResource()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.MonitoredResource)
}
MonitoredResource::MonitoredResource(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  labels_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.MonitoredResource)
}
MonitoredResource::MonitoredResource(const MonitoredResource& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.MonitoredResource)
}

void MonitoredResource::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MonitoredResource_google_2fapi_2fmonitored_5fresource_2eproto.base);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MonitoredResource::~MonitoredResource() {
  // @@protoc_insertion_point(destructor:google.api.MonitoredResource)
  SharedDtor();
}

void MonitoredResource::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MonitoredResource::ArenaDtor(void* object) {
  MonitoredResource* _this = reinterpret_cast< MonitoredResource* >(object);
  (void)_this;
}
void MonitoredResource::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MonitoredResource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MonitoredResource& MonitoredResource::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MonitoredResource_google_2fapi_2fmonitored_5fresource_2eproto.base);
  return *internal_default_instance();
}


void MonitoredResource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.MonitoredResource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

const char* MonitoredResource::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.MonitoredResource.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> labels = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&labels_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MonitoredResource::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.MonitoredResource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResource.type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type(), target);
  }

  // map<string, string> labels = 2;
  if (!this->_internal_labels().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.api.MonitoredResource.LabelsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.api.MonitoredResource.LabelsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_labels().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_labels().begin();
          it != this->_internal_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MonitoredResource_LabelsEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_labels().begin();
          it != this->_internal_labels().end(); ++it) {
        target = MonitoredResource_LabelsEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.MonitoredResource)
  return target;
}

size_t MonitoredResource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.MonitoredResource)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> labels = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_labels_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_labels().begin();
      it != this->_internal_labels().end(); ++it) {
    total_size += MonitoredResource_LabelsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MonitoredResource::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.MonitoredResource)
  GOOGLE_DCHECK_NE(&from, this);
  const MonitoredResource* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MonitoredResource>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.MonitoredResource)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.MonitoredResource)
    MergeFrom(*source);
  }
}

void MonitoredResource::MergeFrom(const MonitoredResource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.MonitoredResource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
}

void MonitoredResource::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.MonitoredResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonitoredResource::CopyFrom(const MonitoredResource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.MonitoredResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitoredResource::IsInitialized() const {
  return true;
}

void MonitoredResource::InternalSwap(MonitoredResource* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  labels_.Swap(&other->labels_);
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata MonitoredResource::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse() {}
MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::MergeFrom(const MonitoredResourceMetadata_UserLabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void MonitoredResourceMetadata::InitAsDefaultInstance() {
  ::google::api::_MonitoredResourceMetadata_default_instance_._instance.get_mutable()->system_labels_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
}
class MonitoredResourceMetadata::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Struct& system_labels(const MonitoredResourceMetadata* msg);
};

const PROTOBUF_NAMESPACE_ID::Struct&
MonitoredResourceMetadata::_Internal::system_labels(const MonitoredResourceMetadata* msg) {
  return *msg->system_labels_;
}
void MonitoredResourceMetadata::unsafe_arena_set_allocated_system_labels(
    PROTOBUF_NAMESPACE_ID::Struct* system_labels) {
  if (GetArenaNoVirtual() == nullptr) {
    delete system_labels_;
  }
  system_labels_ = system_labels;
  if (system_labels) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.MonitoredResourceMetadata.system_labels)
}
void MonitoredResourceMetadata::clear_system_labels() {
  if (GetArenaNoVirtual() == nullptr && system_labels_ != nullptr) {
    delete system_labels_;
  }
  system_labels_ = nullptr;
}
MonitoredResourceMetadata::MonitoredResourceMetadata()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.MonitoredResourceMetadata)
}
MonitoredResourceMetadata::MonitoredResourceMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  user_labels_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.MonitoredResourceMetadata)
}
MonitoredResourceMetadata::MonitoredResourceMetadata(const MonitoredResourceMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_labels_.MergeFrom(from.user_labels_);
  if (from._internal_has_system_labels()) {
    system_labels_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.system_labels_);
  } else {
    system_labels_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.MonitoredResourceMetadata)
}

void MonitoredResourceMetadata::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MonitoredResourceMetadata_google_2fapi_2fmonitored_5fresource_2eproto.base);
  system_labels_ = nullptr;
}

MonitoredResourceMetadata::~MonitoredResourceMetadata() {
  // @@protoc_insertion_point(destructor:google.api.MonitoredResourceMetadata)
  SharedDtor();
}

void MonitoredResourceMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (this != internal_default_instance()) delete system_labels_;
}

void MonitoredResourceMetadata::ArenaDtor(void* object) {
  MonitoredResourceMetadata* _this = reinterpret_cast< MonitoredResourceMetadata* >(object);
  (void)_this;
}
void MonitoredResourceMetadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MonitoredResourceMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MonitoredResourceMetadata& MonitoredResourceMetadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MonitoredResourceMetadata_google_2fapi_2fmonitored_5fresource_2eproto.base);
  return *internal_default_instance();
}


void MonitoredResourceMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.MonitoredResourceMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_labels_.Clear();
  if (GetArenaNoVirtual() == nullptr && system_labels_ != nullptr) {
    delete system_labels_;
  }
  system_labels_ = nullptr;
  _internal_metadata_.Clear();
}

const char* MonitoredResourceMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Struct system_labels = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_system_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> user_labels = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&user_labels_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MonitoredResourceMetadata::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.MonitoredResourceMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct system_labels = 1;
  if (this->has_system_labels()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::system_labels(this), target, stream);
  }

  // map<string, string> user_labels = 2;
  if (!this->_internal_user_labels().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.api.MonitoredResourceMetadata.UserLabelsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.api.MonitoredResourceMetadata.UserLabelsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_user_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_user_labels().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_user_labels().begin();
          it != this->_internal_user_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_user_labels().begin();
          it != this->_internal_user_labels().end(); ++it) {
        target = MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.MonitoredResourceMetadata)
  return target;
}

size_t MonitoredResourceMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.MonitoredResourceMetadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> user_labels = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_user_labels_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_user_labels().begin();
      it != this->_internal_user_labels().end(); ++it) {
    total_size += MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .google.protobuf.Struct system_labels = 1;
  if (this->has_system_labels()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *system_labels_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MonitoredResourceMetadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.MonitoredResourceMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const MonitoredResourceMetadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MonitoredResourceMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.MonitoredResourceMetadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.MonitoredResourceMetadata)
    MergeFrom(*source);
  }
}

void MonitoredResourceMetadata::MergeFrom(const MonitoredResourceMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.MonitoredResourceMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_labels_.MergeFrom(from.user_labels_);
  if (from.has_system_labels()) {
    _internal_mutable_system_labels()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_system_labels());
  }
}

void MonitoredResourceMetadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.MonitoredResourceMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonitoredResourceMetadata::CopyFrom(const MonitoredResourceMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.MonitoredResourceMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitoredResourceMetadata::IsInitialized() const {
  return true;
}

void MonitoredResourceMetadata::InternalSwap(MonitoredResourceMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  user_labels_.Swap(&other->user_labels_);
  swap(system_labels_, other->system_labels_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MonitoredResourceMetadata::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::MonitoredResourceDescriptor* Arena::CreateMaybeMessage< ::google::api::MonitoredResourceDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::MonitoredResourceDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::MonitoredResource_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::MonitoredResource_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::MonitoredResource_LabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::MonitoredResource* Arena::CreateMaybeMessage< ::google::api::MonitoredResource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::MonitoredResource >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::MonitoredResourceMetadata* Arena::CreateMaybeMessage< ::google::api::MonitoredResourceMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::MonitoredResourceMetadata >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
