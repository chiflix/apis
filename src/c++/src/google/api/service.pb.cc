// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/service.proto

#include "google/api/service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fauth_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Authentication_google_2fapi_2fauth_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fbackend_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Backend_google_2fapi_2fbackend_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fbilling_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Billing_google_2fapi_2fbilling_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fcontext_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Context_google_2fapi_2fcontext_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fcontrol_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Control_google_2fapi_2fcontrol_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fdocumentation_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Documentation_google_2fapi_2fdocumentation_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fendpoint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Endpoint_google_2fapi_2fendpoint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexperimental_2fexperimental_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Experimental_google_2fapi_2fexperimental_2fexperimental_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fhttp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Http_google_2fapi_2fhttp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2flog_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LogDescriptor_google_2fapi_2flog_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2flogging_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Logging_google_2fapi_2flogging_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fmetric_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MetricDescriptor_google_2fapi_2fmetric_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fmonitored_5fresource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MonitoredResourceDescriptor_google_2fapi_2fmonitored_5fresource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fmonitoring_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Monitoring_google_2fapi_2fmonitoring_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fquota_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Quota_google_2fapi_2fquota_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fsource_5finfo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SourceInfo_google_2fapi_2fsource_5finfo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fsystem_5fparameter_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SystemParameters_google_2fapi_2fsystem_5fparameter_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fusage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Usage_google_2fapi_2fusage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fapi_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Api_google_2fprotobuf_2fapi_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftype_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Enum_google_2fprotobuf_2ftype_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftype_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Type_google_2fprotobuf_2ftype_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UInt32Value_google_2fprotobuf_2fwrappers_2eproto;
namespace google {
namespace api {
class ServiceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Service> _instance;
} _Service_default_instance_;
}  // namespace api
}  // namespace google
static void InitDefaultsscc_info_Service_google_2fapi_2fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_Service_default_instance_;
    new (ptr) ::google::api::Service();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::Service::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<22> scc_info_Service_google_2fapi_2fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 22, InitDefaultsscc_info_Service_google_2fapi_2fservice_2eproto}, {
      &scc_info_UInt32Value_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Api_google_2fprotobuf_2fapi_2eproto.base,
      &scc_info_Type_google_2fprotobuf_2ftype_2eproto.base,
      &scc_info_Enum_google_2fprotobuf_2ftype_2eproto.base,
      &scc_info_Documentation_google_2fapi_2fdocumentation_2eproto.base,
      &scc_info_Backend_google_2fapi_2fbackend_2eproto.base,
      &scc_info_Http_google_2fapi_2fhttp_2eproto.base,
      &scc_info_Quota_google_2fapi_2fquota_2eproto.base,
      &scc_info_Authentication_google_2fapi_2fauth_2eproto.base,
      &scc_info_Context_google_2fapi_2fcontext_2eproto.base,
      &scc_info_Usage_google_2fapi_2fusage_2eproto.base,
      &scc_info_Endpoint_google_2fapi_2fendpoint_2eproto.base,
      &scc_info_Control_google_2fapi_2fcontrol_2eproto.base,
      &scc_info_LogDescriptor_google_2fapi_2flog_2eproto.base,
      &scc_info_MetricDescriptor_google_2fapi_2fmetric_2eproto.base,
      &scc_info_MonitoredResourceDescriptor_google_2fapi_2fmonitored_5fresource_2eproto.base,
      &scc_info_Billing_google_2fapi_2fbilling_2eproto.base,
      &scc_info_Logging_google_2fapi_2flogging_2eproto.base,
      &scc_info_Monitoring_google_2fapi_2fmonitoring_2eproto.base,
      &scc_info_SystemParameters_google_2fapi_2fsystem_5fparameter_2eproto.base,
      &scc_info_SourceInfo_google_2fapi_2fsource_5finfo_2eproto.base,
      &scc_info_Experimental_google_2fapi_2fexperimental_2fexperimental_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2fapi_2fservice_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_google_2fapi_2fservice_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fservice_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2fapi_2fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::Service, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::Service, config_version_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, name_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, id_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, title_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, producer_project_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, apis_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, types_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, enums_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, documentation_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, backend_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, http_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, quota_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, authentication_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, context_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, usage_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, endpoints_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, control_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, logs_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, metrics_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, monitored_resources_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, billing_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, logging_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, monitoring_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, system_parameters_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, source_info_),
  PROTOBUF_FIELD_OFFSET(::google::api::Service, experimental_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::Service)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_Service_default_instance_),
};

const char descriptor_table_protodef_google_2fapi_2fservice_2eproto[] =
  "\n\030google/api/service.proto\022\ngoogle.api\032\034"
  "google/api/annotations.proto\032\025google/api"
  "/auth.proto\032\030google/api/backend.proto\032\030g"
  "oogle/api/billing.proto\032\030google/api/cont"
  "ext.proto\032\030google/api/control.proto\032\036goo"
  "gle/api/documentation.proto\032\031google/api/"
  "endpoint.proto\032*google/api/experimental/"
  "experimental.proto\032\025google/api/http.prot"
  "o\032\026google/api/label.proto\032\024google/api/lo"
  "g.proto\032\030google/api/logging.proto\032\027googl"
  "e/api/metric.proto\032#google/api/monitored"
  "_resource.proto\032\033google/api/monitoring.p"
  "roto\032\026google/api/quota.proto\032\034google/api"
  "/source_info.proto\032!google/api/system_pa"
  "rameter.proto\032\026google/api/usage.proto\032\031g"
  "oogle/protobuf/any.proto\032\031google/protobu"
  "f/api.proto\032\032google/protobuf/type.proto\032"
  "\036google/protobuf/wrappers.proto\"\206\010\n\007Serv"
  "ice\0224\n\016config_version\030\024 \001(\0132\034.google.pro"
  "tobuf.UInt32Value\022\014\n\004name\030\001 \001(\t\022\n\n\002id\030! "
  "\001(\t\022\r\n\005title\030\002 \001(\t\022\033\n\023producer_project_i"
  "d\030\026 \001(\t\022\"\n\004apis\030\003 \003(\0132\024.google.protobuf."
  "Api\022$\n\005types\030\004 \003(\0132\025.google.protobuf.Typ"
  "e\022$\n\005enums\030\005 \003(\0132\025.google.protobuf.Enum\022"
  "0\n\rdocumentation\030\006 \001(\0132\031.google.api.Docu"
  "mentation\022$\n\007backend\030\010 \001(\0132\023.google.api."
  "Backend\022\036\n\004http\030\t \001(\0132\020.google.api.Http\022"
  " \n\005quota\030\n \001(\0132\021.google.api.Quota\0222\n\016aut"
  "hentication\030\013 \001(\0132\032.google.api.Authentic"
  "ation\022$\n\007context\030\014 \001(\0132\023.google.api.Cont"
  "ext\022 \n\005usage\030\017 \001(\0132\021.google.api.Usage\022\'\n"
  "\tendpoints\030\022 \003(\0132\024.google.api.Endpoint\022$"
  "\n\007control\030\025 \001(\0132\023.google.api.Control\022\'\n\004"
  "logs\030\027 \003(\0132\031.google.api.LogDescriptor\022-\n"
  "\007metrics\030\030 \003(\0132\034.google.api.MetricDescri"
  "ptor\022D\n\023monitored_resources\030\031 \003(\0132\'.goog"
  "le.api.MonitoredResourceDescriptor\022$\n\007bi"
  "lling\030\032 \001(\0132\023.google.api.Billing\022$\n\007logg"
  "ing\030\033 \001(\0132\023.google.api.Logging\022*\n\nmonito"
  "ring\030\034 \001(\0132\026.google.api.Monitoring\0227\n\021sy"
  "stem_parameters\030\035 \001(\0132\034.google.api.Syste"
  "mParameters\022+\n\013source_info\030% \001(\0132\026.googl"
  "e.api.SourceInfo\022.\n\014experimental\030e \001(\0132\030"
  ".google.api.ExperimentalBn\n\016com.google.a"
  "piB\014ServiceProtoP\001ZEgoogle.golang.org/ge"
  "nproto/googleapis/api/serviceconfig;serv"
  "iceconfig\242\002\004GAPIb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2fapi_2fservice_2eproto_deps[24] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fauth_2eproto,
  &::descriptor_table_google_2fapi_2fbackend_2eproto,
  &::descriptor_table_google_2fapi_2fbilling_2eproto,
  &::descriptor_table_google_2fapi_2fcontext_2eproto,
  &::descriptor_table_google_2fapi_2fcontrol_2eproto,
  &::descriptor_table_google_2fapi_2fdocumentation_2eproto,
  &::descriptor_table_google_2fapi_2fendpoint_2eproto,
  &::descriptor_table_google_2fapi_2fexperimental_2fexperimental_2eproto,
  &::descriptor_table_google_2fapi_2fhttp_2eproto,
  &::descriptor_table_google_2fapi_2flabel_2eproto,
  &::descriptor_table_google_2fapi_2flog_2eproto,
  &::descriptor_table_google_2fapi_2flogging_2eproto,
  &::descriptor_table_google_2fapi_2fmetric_2eproto,
  &::descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto,
  &::descriptor_table_google_2fapi_2fmonitoring_2eproto,
  &::descriptor_table_google_2fapi_2fquota_2eproto,
  &::descriptor_table_google_2fapi_2fsource_5finfo_2eproto,
  &::descriptor_table_google_2fapi_2fsystem_5fparameter_2eproto,
  &::descriptor_table_google_2fapi_2fusage_2eproto,
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2fapi_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftype_2eproto,
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2fapi_2fservice_2eproto_sccs[1] = {
  &scc_info_Service_google_2fapi_2fservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2fapi_2fservice_2eproto_once;
static bool descriptor_table_google_2fapi_2fservice_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fapi_2fservice_2eproto = {
  &descriptor_table_google_2fapi_2fservice_2eproto_initialized, descriptor_table_protodef_google_2fapi_2fservice_2eproto, "google/api/service.proto", 1864,
  &descriptor_table_google_2fapi_2fservice_2eproto_once, descriptor_table_google_2fapi_2fservice_2eproto_sccs, descriptor_table_google_2fapi_2fservice_2eproto_deps, 1, 24,
  schemas, file_default_instances, TableStruct_google_2fapi_2fservice_2eproto::offsets,
  file_level_metadata_google_2fapi_2fservice_2eproto, 1, file_level_enum_descriptors_google_2fapi_2fservice_2eproto, file_level_service_descriptors_google_2fapi_2fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fapi_2fservice_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2fapi_2fservice_2eproto), true);
namespace google {
namespace api {

// ===================================================================

void Service::InitAsDefaultInstance() {
  ::google::api::_Service_default_instance_._instance.get_mutable()->config_version_ = const_cast< PROTOBUF_NAMESPACE_ID::UInt32Value*>(
      PROTOBUF_NAMESPACE_ID::UInt32Value::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->documentation_ = const_cast< ::google::api::Documentation*>(
      ::google::api::Documentation::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->backend_ = const_cast< ::google::api::Backend*>(
      ::google::api::Backend::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->http_ = const_cast< ::google::api::Http*>(
      ::google::api::Http::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->quota_ = const_cast< ::google::api::Quota*>(
      ::google::api::Quota::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->authentication_ = const_cast< ::google::api::Authentication*>(
      ::google::api::Authentication::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->context_ = const_cast< ::google::api::Context*>(
      ::google::api::Context::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->usage_ = const_cast< ::google::api::Usage*>(
      ::google::api::Usage::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->control_ = const_cast< ::google::api::Control*>(
      ::google::api::Control::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->billing_ = const_cast< ::google::api::Billing*>(
      ::google::api::Billing::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->logging_ = const_cast< ::google::api::Logging*>(
      ::google::api::Logging::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->monitoring_ = const_cast< ::google::api::Monitoring*>(
      ::google::api::Monitoring::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->system_parameters_ = const_cast< ::google::api::SystemParameters*>(
      ::google::api::SystemParameters::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->source_info_ = const_cast< ::google::api::SourceInfo*>(
      ::google::api::SourceInfo::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->experimental_ = const_cast< ::google::api::Experimental*>(
      ::google::api::Experimental::internal_default_instance());
}
class Service::HasBitSetters {
 public:
  static const PROTOBUF_NAMESPACE_ID::UInt32Value& config_version(const Service* msg);
  static const ::google::api::Documentation& documentation(const Service* msg);
  static const ::google::api::Backend& backend(const Service* msg);
  static const ::google::api::Http& http(const Service* msg);
  static const ::google::api::Quota& quota(const Service* msg);
  static const ::google::api::Authentication& authentication(const Service* msg);
  static const ::google::api::Context& context(const Service* msg);
  static const ::google::api::Usage& usage(const Service* msg);
  static const ::google::api::Control& control(const Service* msg);
  static const ::google::api::Billing& billing(const Service* msg);
  static const ::google::api::Logging& logging(const Service* msg);
  static const ::google::api::Monitoring& monitoring(const Service* msg);
  static const ::google::api::SystemParameters& system_parameters(const Service* msg);
  static const ::google::api::SourceInfo& source_info(const Service* msg);
  static const ::google::api::Experimental& experimental(const Service* msg);
};

const PROTOBUF_NAMESPACE_ID::UInt32Value&
Service::HasBitSetters::config_version(const Service* msg) {
  return *msg->config_version_;
}
const ::google::api::Documentation&
Service::HasBitSetters::documentation(const Service* msg) {
  return *msg->documentation_;
}
const ::google::api::Backend&
Service::HasBitSetters::backend(const Service* msg) {
  return *msg->backend_;
}
const ::google::api::Http&
Service::HasBitSetters::http(const Service* msg) {
  return *msg->http_;
}
const ::google::api::Quota&
Service::HasBitSetters::quota(const Service* msg) {
  return *msg->quota_;
}
const ::google::api::Authentication&
Service::HasBitSetters::authentication(const Service* msg) {
  return *msg->authentication_;
}
const ::google::api::Context&
Service::HasBitSetters::context(const Service* msg) {
  return *msg->context_;
}
const ::google::api::Usage&
Service::HasBitSetters::usage(const Service* msg) {
  return *msg->usage_;
}
const ::google::api::Control&
Service::HasBitSetters::control(const Service* msg) {
  return *msg->control_;
}
const ::google::api::Billing&
Service::HasBitSetters::billing(const Service* msg) {
  return *msg->billing_;
}
const ::google::api::Logging&
Service::HasBitSetters::logging(const Service* msg) {
  return *msg->logging_;
}
const ::google::api::Monitoring&
Service::HasBitSetters::monitoring(const Service* msg) {
  return *msg->monitoring_;
}
const ::google::api::SystemParameters&
Service::HasBitSetters::system_parameters(const Service* msg) {
  return *msg->system_parameters_;
}
const ::google::api::SourceInfo&
Service::HasBitSetters::source_info(const Service* msg) {
  return *msg->source_info_;
}
const ::google::api::Experimental&
Service::HasBitSetters::experimental(const Service* msg) {
  return *msg->experimental_;
}
void Service::clear_config_version() {
  if (GetArenaNoVirtual() == nullptr && config_version_ != nullptr) {
    delete config_version_;
  }
  config_version_ = nullptr;
}
void Service::clear_apis() {
  apis_.Clear();
}
void Service::clear_types() {
  types_.Clear();
}
void Service::clear_enums() {
  enums_.Clear();
}
void Service::clear_documentation() {
  if (GetArenaNoVirtual() == nullptr && documentation_ != nullptr) {
    delete documentation_;
  }
  documentation_ = nullptr;
}
void Service::clear_backend() {
  if (GetArenaNoVirtual() == nullptr && backend_ != nullptr) {
    delete backend_;
  }
  backend_ = nullptr;
}
void Service::clear_http() {
  if (GetArenaNoVirtual() == nullptr && http_ != nullptr) {
    delete http_;
  }
  http_ = nullptr;
}
void Service::clear_quota() {
  if (GetArenaNoVirtual() == nullptr && quota_ != nullptr) {
    delete quota_;
  }
  quota_ = nullptr;
}
void Service::clear_authentication() {
  if (GetArenaNoVirtual() == nullptr && authentication_ != nullptr) {
    delete authentication_;
  }
  authentication_ = nullptr;
}
void Service::clear_context() {
  if (GetArenaNoVirtual() == nullptr && context_ != nullptr) {
    delete context_;
  }
  context_ = nullptr;
}
void Service::clear_usage() {
  if (GetArenaNoVirtual() == nullptr && usage_ != nullptr) {
    delete usage_;
  }
  usage_ = nullptr;
}
void Service::clear_endpoints() {
  endpoints_.Clear();
}
void Service::clear_control() {
  if (GetArenaNoVirtual() == nullptr && control_ != nullptr) {
    delete control_;
  }
  control_ = nullptr;
}
void Service::clear_logs() {
  logs_.Clear();
}
void Service::clear_metrics() {
  metrics_.Clear();
}
void Service::clear_monitored_resources() {
  monitored_resources_.Clear();
}
void Service::clear_billing() {
  if (GetArenaNoVirtual() == nullptr && billing_ != nullptr) {
    delete billing_;
  }
  billing_ = nullptr;
}
void Service::clear_logging() {
  if (GetArenaNoVirtual() == nullptr && logging_ != nullptr) {
    delete logging_;
  }
  logging_ = nullptr;
}
void Service::clear_monitoring() {
  if (GetArenaNoVirtual() == nullptr && monitoring_ != nullptr) {
    delete monitoring_;
  }
  monitoring_ = nullptr;
}
void Service::clear_system_parameters() {
  if (GetArenaNoVirtual() == nullptr && system_parameters_ != nullptr) {
    delete system_parameters_;
  }
  system_parameters_ = nullptr;
}
void Service::clear_source_info() {
  if (GetArenaNoVirtual() == nullptr && source_info_ != nullptr) {
    delete source_info_;
  }
  source_info_ = nullptr;
}
void Service::clear_experimental() {
  if (GetArenaNoVirtual() == nullptr && experimental_ != nullptr) {
    delete experimental_;
  }
  experimental_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Service::kConfigVersionFieldNumber;
const int Service::kNameFieldNumber;
const int Service::kIdFieldNumber;
const int Service::kTitleFieldNumber;
const int Service::kProducerProjectIdFieldNumber;
const int Service::kApisFieldNumber;
const int Service::kTypesFieldNumber;
const int Service::kEnumsFieldNumber;
const int Service::kDocumentationFieldNumber;
const int Service::kBackendFieldNumber;
const int Service::kHttpFieldNumber;
const int Service::kQuotaFieldNumber;
const int Service::kAuthenticationFieldNumber;
const int Service::kContextFieldNumber;
const int Service::kUsageFieldNumber;
const int Service::kEndpointsFieldNumber;
const int Service::kControlFieldNumber;
const int Service::kLogsFieldNumber;
const int Service::kMetricsFieldNumber;
const int Service::kMonitoredResourcesFieldNumber;
const int Service::kBillingFieldNumber;
const int Service::kLoggingFieldNumber;
const int Service::kMonitoringFieldNumber;
const int Service::kSystemParametersFieldNumber;
const int Service::kSourceInfoFieldNumber;
const int Service::kExperimentalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Service::Service()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Service)
}
Service::Service(const Service& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      apis_(from.apis_),
      types_(from.types_),
      enums_(from.enums_),
      endpoints_(from.endpoints_),
      logs_(from.logs_),
      metrics_(from.metrics_),
      monitored_resources_(from.monitored_resources_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  producer_project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.producer_project_id().size() > 0) {
    producer_project_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.producer_project_id_);
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_documentation()) {
    documentation_ = new ::google::api::Documentation(*from.documentation_);
  } else {
    documentation_ = nullptr;
  }
  if (from.has_backend()) {
    backend_ = new ::google::api::Backend(*from.backend_);
  } else {
    backend_ = nullptr;
  }
  if (from.has_http()) {
    http_ = new ::google::api::Http(*from.http_);
  } else {
    http_ = nullptr;
  }
  if (from.has_quota()) {
    quota_ = new ::google::api::Quota(*from.quota_);
  } else {
    quota_ = nullptr;
  }
  if (from.has_authentication()) {
    authentication_ = new ::google::api::Authentication(*from.authentication_);
  } else {
    authentication_ = nullptr;
  }
  if (from.has_context()) {
    context_ = new ::google::api::Context(*from.context_);
  } else {
    context_ = nullptr;
  }
  if (from.has_usage()) {
    usage_ = new ::google::api::Usage(*from.usage_);
  } else {
    usage_ = nullptr;
  }
  if (from.has_config_version()) {
    config_version_ = new PROTOBUF_NAMESPACE_ID::UInt32Value(*from.config_version_);
  } else {
    config_version_ = nullptr;
  }
  if (from.has_control()) {
    control_ = new ::google::api::Control(*from.control_);
  } else {
    control_ = nullptr;
  }
  if (from.has_billing()) {
    billing_ = new ::google::api::Billing(*from.billing_);
  } else {
    billing_ = nullptr;
  }
  if (from.has_logging()) {
    logging_ = new ::google::api::Logging(*from.logging_);
  } else {
    logging_ = nullptr;
  }
  if (from.has_monitoring()) {
    monitoring_ = new ::google::api::Monitoring(*from.monitoring_);
  } else {
    monitoring_ = nullptr;
  }
  if (from.has_system_parameters()) {
    system_parameters_ = new ::google::api::SystemParameters(*from.system_parameters_);
  } else {
    system_parameters_ = nullptr;
  }
  if (from.has_source_info()) {
    source_info_ = new ::google::api::SourceInfo(*from.source_info_);
  } else {
    source_info_ = nullptr;
  }
  if (from.has_experimental()) {
    experimental_ = new ::google::api::Experimental(*from.experimental_);
  } else {
    experimental_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.Service)
}

void Service::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Service_google_2fapi_2fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  producer_project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&documentation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&experimental_) -
      reinterpret_cast<char*>(&documentation_)) + sizeof(experimental_));
}

Service::~Service() {
  // @@protoc_insertion_point(destructor:google.api.Service)
  SharedDtor();
}

void Service::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  producer_project_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete documentation_;
  if (this != internal_default_instance()) delete backend_;
  if (this != internal_default_instance()) delete http_;
  if (this != internal_default_instance()) delete quota_;
  if (this != internal_default_instance()) delete authentication_;
  if (this != internal_default_instance()) delete context_;
  if (this != internal_default_instance()) delete usage_;
  if (this != internal_default_instance()) delete config_version_;
  if (this != internal_default_instance()) delete control_;
  if (this != internal_default_instance()) delete billing_;
  if (this != internal_default_instance()) delete logging_;
  if (this != internal_default_instance()) delete monitoring_;
  if (this != internal_default_instance()) delete system_parameters_;
  if (this != internal_default_instance()) delete source_info_;
  if (this != internal_default_instance()) delete experimental_;
}

void Service::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Service& Service::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Service_google_2fapi_2fservice_2eproto.base);
  return *internal_default_instance();
}


void Service::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Service)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apis_.Clear();
  types_.Clear();
  enums_.Clear();
  endpoints_.Clear();
  logs_.Clear();
  metrics_.Clear();
  monitored_resources_.Clear();
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  producer_project_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && documentation_ != nullptr) {
    delete documentation_;
  }
  documentation_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && backend_ != nullptr) {
    delete backend_;
  }
  backend_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && http_ != nullptr) {
    delete http_;
  }
  http_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && quota_ != nullptr) {
    delete quota_;
  }
  quota_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && authentication_ != nullptr) {
    delete authentication_;
  }
  authentication_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && context_ != nullptr) {
    delete context_;
  }
  context_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && usage_ != nullptr) {
    delete usage_;
  }
  usage_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && config_version_ != nullptr) {
    delete config_version_;
  }
  config_version_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && control_ != nullptr) {
    delete control_;
  }
  control_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && billing_ != nullptr) {
    delete billing_;
  }
  billing_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && logging_ != nullptr) {
    delete logging_;
  }
  logging_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && monitoring_ != nullptr) {
    delete monitoring_;
  }
  monitoring_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && system_parameters_ != nullptr) {
    delete system_parameters_;
  }
  system_parameters_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && source_info_ != nullptr) {
    delete source_info_;
  }
  source_info_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && experimental_ != nullptr) {
    delete experimental_;
  }
  experimental_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Service::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "google.api.Service.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string title = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_title(), ptr, ctx, "google.api.Service.title");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.Api apis = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_apis(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.Type types = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.Enum enums = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_enums(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 42);
        } else goto handle_unusual;
        continue;
      // .google.api.Documentation documentation = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_documentation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.Backend backend = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(mutable_backend(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.Http http = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(mutable_http(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.Quota quota = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(mutable_quota(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.Authentication authentication = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(mutable_authentication(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.Context context = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(mutable_context(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.Usage usage = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(mutable_usage(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .google.api.Endpoint endpoints = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_endpoints(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 402);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.UInt32Value config_version = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr = ctx->ParseMessage(mutable_config_version(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.Control control = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(mutable_control(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string producer_project_id = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_producer_project_id(), ptr, ctx, "google.api.Service.producer_project_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .google.api.LogDescriptor logs = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_logs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 442);
        } else goto handle_unusual;
        continue;
      // repeated .google.api.MetricDescriptor metrics = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_metrics(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 450);
        } else goto handle_unusual;
        continue;
      // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_monitored_resources(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 458);
        } else goto handle_unusual;
        continue;
      // .google.api.Billing billing = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr = ctx->ParseMessage(mutable_billing(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.Logging logging = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(mutable_logging(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.Monitoring monitoring = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          ptr = ctx->ParseMessage(mutable_monitoring(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.SystemParameters system_parameters = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(mutable_system_parameters(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_id(), ptr, ctx, "google.api.Service.id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.SourceInfo source_info = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_source_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.Experimental experimental = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_experimental(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Service::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Service)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "google.api.Service.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "google.api.Service.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Api apis = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_apis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Type types = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Enum enums = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_enums()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Documentation documentation = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_documentation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Backend backend = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_backend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Http http = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_http()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Quota quota = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_quota()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Authentication authentication = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_authentication()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Context context = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Usage usage = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (122 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_usage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.Endpoint endpoints = 18;
      case 18: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (146 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_endpoints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt32Value config_version = 20;
      case 20: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (162 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_config_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Control control = 21;
      case 21: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (170 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_control()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string producer_project_id = 22;
      case 22: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (178 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_producer_project_id()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->producer_project_id().data(), static_cast<int>(this->producer_project_id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "google.api.Service.producer_project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.LogDescriptor logs = 23;
      case 23: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (186 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_logs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.MetricDescriptor metrics = 24;
      case 24: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (194 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
      case 25: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (202 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_monitored_resources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Billing billing = 26;
      case 26: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (210 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_billing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Logging logging = 27;
      case 27: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (218 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_logging()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Monitoring monitoring = 28;
      case 28: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (226 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_monitoring()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.SystemParameters system_parameters = 29;
      case 29: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (234 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_system_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 33;
      case 33: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (266 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "google.api.Service.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.SourceInfo source_info = 37;
      case 37: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (298 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_source_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Experimental experimental = 101;
      case 101: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (810 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_experimental()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Service)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Service)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Service::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Service)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.title");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // repeated .google.protobuf.Api apis = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apis_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->apis(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Type types = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->types_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->types(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Enum enums = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->enums_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->enums(static_cast<int>(i)),
      output);
  }

  // .google.api.Documentation documentation = 6;
  if (this->has_documentation()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::documentation(this), output);
  }

  // .google.api.Backend backend = 8;
  if (this->has_backend()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::backend(this), output);
  }

  // .google.api.Http http = 9;
  if (this->has_http()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::http(this), output);
  }

  // .google.api.Quota quota = 10;
  if (this->has_quota()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::quota(this), output);
  }

  // .google.api.Authentication authentication = 11;
  if (this->has_authentication()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, HasBitSetters::authentication(this), output);
  }

  // .google.api.Context context = 12;
  if (this->has_context()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, HasBitSetters::context(this), output);
  }

  // .google.api.Usage usage = 15;
  if (this->has_usage()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, HasBitSetters::usage(this), output);
  }

  // repeated .google.api.Endpoint endpoints = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->endpoints_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->endpoints(static_cast<int>(i)),
      output);
  }

  // .google.protobuf.UInt32Value config_version = 20;
  if (this->has_config_version()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, HasBitSetters::config_version(this), output);
  }

  // .google.api.Control control = 21;
  if (this->has_control()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, HasBitSetters::control(this), output);
  }

  // string producer_project_id = 22;
  if (this->producer_project_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->producer_project_id().data(), static_cast<int>(this->producer_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.producer_project_id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->producer_project_id(), output);
  }

  // repeated .google.api.LogDescriptor logs = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logs_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      23,
      this->logs(static_cast<int>(i)),
      output);
  }

  // repeated .google.api.MetricDescriptor metrics = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      24,
      this->metrics(static_cast<int>(i)),
      output);
  }

  // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->monitored_resources_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      25,
      this->monitored_resources(static_cast<int>(i)),
      output);
  }

  // .google.api.Billing billing = 26;
  if (this->has_billing()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, HasBitSetters::billing(this), output);
  }

  // .google.api.Logging logging = 27;
  if (this->has_logging()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, HasBitSetters::logging(this), output);
  }

  // .google.api.Monitoring monitoring = 28;
  if (this->has_monitoring()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, HasBitSetters::monitoring(this), output);
  }

  // .google.api.SystemParameters system_parameters = 29;
  if (this->has_system_parameters()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, HasBitSetters::system_parameters(this), output);
  }

  // string id = 33;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      33, this->id(), output);
  }

  // .google.api.SourceInfo source_info = 37;
  if (this->has_source_info()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, HasBitSetters::source_info(this), output);
  }

  // .google.api.Experimental experimental = 101;
  if (this->has_experimental()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, HasBitSetters::experimental(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.Service)
}

::PROTOBUF_NAMESPACE_ID::uint8* Service::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Service)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.title");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // repeated .google.protobuf.Api apis = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apis_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->apis(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.Type types = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->types_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->types(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.Enum enums = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->enums_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->enums(static_cast<int>(i)), target);
  }

  // .google.api.Documentation documentation = 6;
  if (this->has_documentation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::documentation(this), target);
  }

  // .google.api.Backend backend = 8;
  if (this->has_backend()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::backend(this), target);
  }

  // .google.api.Http http = 9;
  if (this->has_http()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::http(this), target);
  }

  // .google.api.Quota quota = 10;
  if (this->has_quota()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::quota(this), target);
  }

  // .google.api.Authentication authentication = 11;
  if (this->has_authentication()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, HasBitSetters::authentication(this), target);
  }

  // .google.api.Context context = 12;
  if (this->has_context()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, HasBitSetters::context(this), target);
  }

  // .google.api.Usage usage = 15;
  if (this->has_usage()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, HasBitSetters::usage(this), target);
  }

  // repeated .google.api.Endpoint endpoints = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->endpoints_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->endpoints(static_cast<int>(i)), target);
  }

  // .google.protobuf.UInt32Value config_version = 20;
  if (this->has_config_version()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, HasBitSetters::config_version(this), target);
  }

  // .google.api.Control control = 21;
  if (this->has_control()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, HasBitSetters::control(this), target);
  }

  // string producer_project_id = 22;
  if (this->producer_project_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->producer_project_id().data(), static_cast<int>(this->producer_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.producer_project_id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        22, this->producer_project_id(), target);
  }

  // repeated .google.api.LogDescriptor logs = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logs_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->logs(static_cast<int>(i)), target);
  }

  // repeated .google.api.MetricDescriptor metrics = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->metrics(static_cast<int>(i)), target);
  }

  // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->monitored_resources_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->monitored_resources(static_cast<int>(i)), target);
  }

  // .google.api.Billing billing = 26;
  if (this->has_billing()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, HasBitSetters::billing(this), target);
  }

  // .google.api.Logging logging = 27;
  if (this->has_logging()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, HasBitSetters::logging(this), target);
  }

  // .google.api.Monitoring monitoring = 28;
  if (this->has_monitoring()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, HasBitSetters::monitoring(this), target);
  }

  // .google.api.SystemParameters system_parameters = 29;
  if (this->has_system_parameters()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, HasBitSetters::system_parameters(this), target);
  }

  // string id = 33;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        33, this->id(), target);
  }

  // .google.api.SourceInfo source_info = 37;
  if (this->has_source_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        37, HasBitSetters::source_info(this), target);
  }

  // .google.api.Experimental experimental = 101;
  if (this->has_experimental()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        101, HasBitSetters::experimental(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.Service)
  return target;
}

size_t Service::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Service)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Api apis = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->apis_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->apis(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Type types = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->types_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->types(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Enum enums = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->enums_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->enums(static_cast<int>(i)));
    }
  }

  // repeated .google.api.Endpoint endpoints = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->endpoints_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->endpoints(static_cast<int>(i)));
    }
  }

  // repeated .google.api.LogDescriptor logs = 23;
  {
    unsigned int count = static_cast<unsigned int>(this->logs_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->logs(static_cast<int>(i)));
    }
  }

  // repeated .google.api.MetricDescriptor metrics = 24;
  {
    unsigned int count = static_cast<unsigned int>(this->metrics_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->metrics(static_cast<int>(i)));
    }
  }

  // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
  {
    unsigned int count = static_cast<unsigned int>(this->monitored_resources_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->monitored_resources(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string producer_project_id = 22;
  if (this->producer_project_id().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->producer_project_id());
  }

  // string id = 33;
  if (this->id().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .google.api.Documentation documentation = 6;
  if (this->has_documentation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *documentation_);
  }

  // .google.api.Backend backend = 8;
  if (this->has_backend()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *backend_);
  }

  // .google.api.Http http = 9;
  if (this->has_http()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *http_);
  }

  // .google.api.Quota quota = 10;
  if (this->has_quota()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *quota_);
  }

  // .google.api.Authentication authentication = 11;
  if (this->has_authentication()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *authentication_);
  }

  // .google.api.Context context = 12;
  if (this->has_context()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // .google.api.Usage usage = 15;
  if (this->has_usage()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *usage_);
  }

  // .google.protobuf.UInt32Value config_version = 20;
  if (this->has_config_version()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_version_);
  }

  // .google.api.Control control = 21;
  if (this->has_control()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *control_);
  }

  // .google.api.Billing billing = 26;
  if (this->has_billing()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *billing_);
  }

  // .google.api.Logging logging = 27;
  if (this->has_logging()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *logging_);
  }

  // .google.api.Monitoring monitoring = 28;
  if (this->has_monitoring()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *monitoring_);
  }

  // .google.api.SystemParameters system_parameters = 29;
  if (this->has_system_parameters()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *system_parameters_);
  }

  // .google.api.SourceInfo source_info = 37;
  if (this->has_source_info()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_info_);
  }

  // .google.api.Experimental experimental = 101;
  if (this->has_experimental()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *experimental_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Service::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Service)
  GOOGLE_DCHECK_NE(&from, this);
  const Service* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Service>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Service)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Service)
    MergeFrom(*source);
  }
}

void Service::MergeFrom(const Service& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Service)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  apis_.MergeFrom(from.apis_);
  types_.MergeFrom(from.types_);
  enums_.MergeFrom(from.enums_);
  endpoints_.MergeFrom(from.endpoints_);
  logs_.MergeFrom(from.logs_);
  metrics_.MergeFrom(from.metrics_);
  monitored_resources_.MergeFrom(from.monitored_resources_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.producer_project_id().size() > 0) {

    producer_project_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.producer_project_id_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_documentation()) {
    mutable_documentation()->::google::api::Documentation::MergeFrom(from.documentation());
  }
  if (from.has_backend()) {
    mutable_backend()->::google::api::Backend::MergeFrom(from.backend());
  }
  if (from.has_http()) {
    mutable_http()->::google::api::Http::MergeFrom(from.http());
  }
  if (from.has_quota()) {
    mutable_quota()->::google::api::Quota::MergeFrom(from.quota());
  }
  if (from.has_authentication()) {
    mutable_authentication()->::google::api::Authentication::MergeFrom(from.authentication());
  }
  if (from.has_context()) {
    mutable_context()->::google::api::Context::MergeFrom(from.context());
  }
  if (from.has_usage()) {
    mutable_usage()->::google::api::Usage::MergeFrom(from.usage());
  }
  if (from.has_config_version()) {
    mutable_config_version()->PROTOBUF_NAMESPACE_ID::UInt32Value::MergeFrom(from.config_version());
  }
  if (from.has_control()) {
    mutable_control()->::google::api::Control::MergeFrom(from.control());
  }
  if (from.has_billing()) {
    mutable_billing()->::google::api::Billing::MergeFrom(from.billing());
  }
  if (from.has_logging()) {
    mutable_logging()->::google::api::Logging::MergeFrom(from.logging());
  }
  if (from.has_monitoring()) {
    mutable_monitoring()->::google::api::Monitoring::MergeFrom(from.monitoring());
  }
  if (from.has_system_parameters()) {
    mutable_system_parameters()->::google::api::SystemParameters::MergeFrom(from.system_parameters());
  }
  if (from.has_source_info()) {
    mutable_source_info()->::google::api::SourceInfo::MergeFrom(from.source_info());
  }
  if (from.has_experimental()) {
    mutable_experimental()->::google::api::Experimental::MergeFrom(from.experimental());
  }
}

void Service::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Service::CopyFrom(const Service& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Service::IsInitialized() const {
  return true;
}

void Service::Swap(Service* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Service::InternalSwap(Service* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&apis_)->InternalSwap(CastToBase(&other->apis_));
  CastToBase(&types_)->InternalSwap(CastToBase(&other->types_));
  CastToBase(&enums_)->InternalSwap(CastToBase(&other->enums_));
  CastToBase(&endpoints_)->InternalSwap(CastToBase(&other->endpoints_));
  CastToBase(&logs_)->InternalSwap(CastToBase(&other->logs_));
  CastToBase(&metrics_)->InternalSwap(CastToBase(&other->metrics_));
  CastToBase(&monitored_resources_)->InternalSwap(CastToBase(&other->monitored_resources_));
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  producer_project_id_.Swap(&other->producer_project_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(documentation_, other->documentation_);
  swap(backend_, other->backend_);
  swap(http_, other->http_);
  swap(quota_, other->quota_);
  swap(authentication_, other->authentication_);
  swap(context_, other->context_);
  swap(usage_, other->usage_);
  swap(config_version_, other->config_version_);
  swap(control_, other->control_);
  swap(billing_, other->billing_);
  swap(logging_, other->logging_);
  swap(monitoring_, other->monitoring_);
  swap(system_parameters_, other->system_parameters_);
  swap(source_info_, other->source_info_);
  swap(experimental_, other->experimental_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Service::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::Service* Arena::CreateMaybeMessage< ::google::api::Service >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::Service >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
