// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/system_parameter.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2fsystem_5fparameter_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2fsystem_5fparameter_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fsystem_5fparameter_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fapi_2fsystem_5fparameter_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fapi_2fsystem_5fparameter_2eproto;
namespace google {
namespace api {
class SystemParameter;
class SystemParameterDefaultTypeInternal;
extern SystemParameterDefaultTypeInternal _SystemParameter_default_instance_;
class SystemParameterRule;
class SystemParameterRuleDefaultTypeInternal;
extern SystemParameterRuleDefaultTypeInternal _SystemParameterRule_default_instance_;
class SystemParameters;
class SystemParametersDefaultTypeInternal;
extern SystemParametersDefaultTypeInternal _SystemParameters_default_instance_;
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> ::google::api::SystemParameter* Arena::CreateMaybeMessage<::google::api::SystemParameter>(Arena*);
template<> ::google::api::SystemParameterRule* Arena::CreateMaybeMessage<::google::api::SystemParameterRule>(Arena*);
template<> ::google::api::SystemParameters* Arena::CreateMaybeMessage<::google::api::SystemParameters>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace google {
namespace api {

// ===================================================================

class SystemParameters :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.SystemParameters) */ {
 public:
  SystemParameters();
  virtual ~SystemParameters();

  SystemParameters(const SystemParameters& from);
  SystemParameters(SystemParameters&& from) noexcept
    : SystemParameters() {
    *this = ::std::move(from);
  }

  inline SystemParameters& operator=(const SystemParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemParameters& operator=(SystemParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SystemParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemParameters* internal_default_instance() {
    return reinterpret_cast<const SystemParameters*>(
               &_SystemParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SystemParameters* other);
  friend void swap(SystemParameters& a, SystemParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SystemParameters* New() const final {
    return CreateMaybeMessage<SystemParameters>(nullptr);
  }

  SystemParameters* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemParameters>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SystemParameters& from);
  void MergeFrom(const SystemParameters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SystemParameters* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.SystemParameters";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fapi_2fsystem_5fparameter_2eproto);
    return ::descriptor_table_google_2fapi_2fsystem_5fparameter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.api.SystemParameterRule rules = 1;
  int rules_size() const;
  void clear_rules();
  static const int kRulesFieldNumber = 1;
  ::google::api::SystemParameterRule* mutable_rules(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::SystemParameterRule >*
      mutable_rules();
  const ::google::api::SystemParameterRule& rules(int index) const;
  ::google::api::SystemParameterRule* add_rules();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::SystemParameterRule >&
      rules() const;

  // @@protoc_insertion_point(class_scope:google.api.SystemParameters)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::SystemParameterRule > rules_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapi_2fsystem_5fparameter_2eproto;
};
// -------------------------------------------------------------------

class SystemParameterRule :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.SystemParameterRule) */ {
 public:
  SystemParameterRule();
  virtual ~SystemParameterRule();

  SystemParameterRule(const SystemParameterRule& from);
  SystemParameterRule(SystemParameterRule&& from) noexcept
    : SystemParameterRule() {
    *this = ::std::move(from);
  }

  inline SystemParameterRule& operator=(const SystemParameterRule& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemParameterRule& operator=(SystemParameterRule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SystemParameterRule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemParameterRule* internal_default_instance() {
    return reinterpret_cast<const SystemParameterRule*>(
               &_SystemParameterRule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SystemParameterRule* other);
  friend void swap(SystemParameterRule& a, SystemParameterRule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SystemParameterRule* New() const final {
    return CreateMaybeMessage<SystemParameterRule>(nullptr);
  }

  SystemParameterRule* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemParameterRule>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SystemParameterRule& from);
  void MergeFrom(const SystemParameterRule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SystemParameterRule* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.SystemParameterRule";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fapi_2fsystem_5fparameter_2eproto);
    return ::descriptor_table_google_2fapi_2fsystem_5fparameter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.api.SystemParameter parameters = 2;
  int parameters_size() const;
  void clear_parameters();
  static const int kParametersFieldNumber = 2;
  ::google::api::SystemParameter* mutable_parameters(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::SystemParameter >*
      mutable_parameters();
  const ::google::api::SystemParameter& parameters(int index) const;
  ::google::api::SystemParameter* add_parameters();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::SystemParameter >&
      parameters() const;

  // string selector = 1;
  void clear_selector();
  static const int kSelectorFieldNumber = 1;
  const std::string& selector() const;
  void set_selector(const std::string& value);
  void set_selector(std::string&& value);
  void set_selector(const char* value);
  void set_selector(const char* value, size_t size);
  std::string* mutable_selector();
  std::string* release_selector();
  void set_allocated_selector(std::string* selector);

  // @@protoc_insertion_point(class_scope:google.api.SystemParameterRule)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::SystemParameter > parameters_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr selector_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapi_2fsystem_5fparameter_2eproto;
};
// -------------------------------------------------------------------

class SystemParameter :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.SystemParameter) */ {
 public:
  SystemParameter();
  virtual ~SystemParameter();

  SystemParameter(const SystemParameter& from);
  SystemParameter(SystemParameter&& from) noexcept
    : SystemParameter() {
    *this = ::std::move(from);
  }

  inline SystemParameter& operator=(const SystemParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemParameter& operator=(SystemParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SystemParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemParameter* internal_default_instance() {
    return reinterpret_cast<const SystemParameter*>(
               &_SystemParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(SystemParameter* other);
  friend void swap(SystemParameter& a, SystemParameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SystemParameter* New() const final {
    return CreateMaybeMessage<SystemParameter>(nullptr);
  }

  SystemParameter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemParameter>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SystemParameter& from);
  void MergeFrom(const SystemParameter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SystemParameter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.SystemParameter";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fapi_2fsystem_5fparameter_2eproto);
    return ::descriptor_table_google_2fapi_2fsystem_5fparameter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // string http_header = 2;
  void clear_http_header();
  static const int kHttpHeaderFieldNumber = 2;
  const std::string& http_header() const;
  void set_http_header(const std::string& value);
  void set_http_header(std::string&& value);
  void set_http_header(const char* value);
  void set_http_header(const char* value, size_t size);
  std::string* mutable_http_header();
  std::string* release_http_header();
  void set_allocated_http_header(std::string* http_header);

  // string url_query_parameter = 3;
  void clear_url_query_parameter();
  static const int kUrlQueryParameterFieldNumber = 3;
  const std::string& url_query_parameter() const;
  void set_url_query_parameter(const std::string& value);
  void set_url_query_parameter(std::string&& value);
  void set_url_query_parameter(const char* value);
  void set_url_query_parameter(const char* value, size_t size);
  std::string* mutable_url_query_parameter();
  std::string* release_url_query_parameter();
  void set_allocated_url_query_parameter(std::string* url_query_parameter);

  // @@protoc_insertion_point(class_scope:google.api.SystemParameter)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr http_header_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr url_query_parameter_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapi_2fsystem_5fparameter_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SystemParameters

// repeated .google.api.SystemParameterRule rules = 1;
inline int SystemParameters::rules_size() const {
  return rules_.size();
}
inline void SystemParameters::clear_rules() {
  rules_.Clear();
}
inline ::google::api::SystemParameterRule* SystemParameters::mutable_rules(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.SystemParameters.rules)
  return rules_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::SystemParameterRule >*
SystemParameters::mutable_rules() {
  // @@protoc_insertion_point(field_mutable_list:google.api.SystemParameters.rules)
  return &rules_;
}
inline const ::google::api::SystemParameterRule& SystemParameters::rules(int index) const {
  // @@protoc_insertion_point(field_get:google.api.SystemParameters.rules)
  return rules_.Get(index);
}
inline ::google::api::SystemParameterRule* SystemParameters::add_rules() {
  // @@protoc_insertion_point(field_add:google.api.SystemParameters.rules)
  return rules_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::SystemParameterRule >&
SystemParameters::rules() const {
  // @@protoc_insertion_point(field_list:google.api.SystemParameters.rules)
  return rules_;
}

// -------------------------------------------------------------------

// SystemParameterRule

// string selector = 1;
inline void SystemParameterRule::clear_selector() {
  selector_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SystemParameterRule::selector() const {
  // @@protoc_insertion_point(field_get:google.api.SystemParameterRule.selector)
  return selector_.GetNoArena();
}
inline void SystemParameterRule::set_selector(const std::string& value) {
  
  selector_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.SystemParameterRule.selector)
}
inline void SystemParameterRule::set_selector(std::string&& value) {
  
  selector_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.api.SystemParameterRule.selector)
}
inline void SystemParameterRule::set_selector(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  selector_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.SystemParameterRule.selector)
}
inline void SystemParameterRule::set_selector(const char* value, size_t size) {
  
  selector_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.SystemParameterRule.selector)
}
inline std::string* SystemParameterRule::mutable_selector() {
  
  // @@protoc_insertion_point(field_mutable:google.api.SystemParameterRule.selector)
  return selector_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemParameterRule::release_selector() {
  // @@protoc_insertion_point(field_release:google.api.SystemParameterRule.selector)
  
  return selector_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemParameterRule::set_allocated_selector(std::string* selector) {
  if (selector != nullptr) {
    
  } else {
    
  }
  selector_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), selector);
  // @@protoc_insertion_point(field_set_allocated:google.api.SystemParameterRule.selector)
}

// repeated .google.api.SystemParameter parameters = 2;
inline int SystemParameterRule::parameters_size() const {
  return parameters_.size();
}
inline void SystemParameterRule::clear_parameters() {
  parameters_.Clear();
}
inline ::google::api::SystemParameter* SystemParameterRule::mutable_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.SystemParameterRule.parameters)
  return parameters_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::SystemParameter >*
SystemParameterRule::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_list:google.api.SystemParameterRule.parameters)
  return &parameters_;
}
inline const ::google::api::SystemParameter& SystemParameterRule::parameters(int index) const {
  // @@protoc_insertion_point(field_get:google.api.SystemParameterRule.parameters)
  return parameters_.Get(index);
}
inline ::google::api::SystemParameter* SystemParameterRule::add_parameters() {
  // @@protoc_insertion_point(field_add:google.api.SystemParameterRule.parameters)
  return parameters_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::SystemParameter >&
SystemParameterRule::parameters() const {
  // @@protoc_insertion_point(field_list:google.api.SystemParameterRule.parameters)
  return parameters_;
}

// -------------------------------------------------------------------

// SystemParameter

// string name = 1;
inline void SystemParameter::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SystemParameter::name() const {
  // @@protoc_insertion_point(field_get:google.api.SystemParameter.name)
  return name_.GetNoArena();
}
inline void SystemParameter::set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.SystemParameter.name)
}
inline void SystemParameter::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.api.SystemParameter.name)
}
inline void SystemParameter::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.SystemParameter.name)
}
inline void SystemParameter::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.SystemParameter.name)
}
inline std::string* SystemParameter::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.SystemParameter.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemParameter::release_name() {
  // @@protoc_insertion_point(field_release:google.api.SystemParameter.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemParameter::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.api.SystemParameter.name)
}

// string http_header = 2;
inline void SystemParameter::clear_http_header() {
  http_header_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SystemParameter::http_header() const {
  // @@protoc_insertion_point(field_get:google.api.SystemParameter.http_header)
  return http_header_.GetNoArena();
}
inline void SystemParameter::set_http_header(const std::string& value) {
  
  http_header_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.SystemParameter.http_header)
}
inline void SystemParameter::set_http_header(std::string&& value) {
  
  http_header_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.api.SystemParameter.http_header)
}
inline void SystemParameter::set_http_header(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  http_header_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.SystemParameter.http_header)
}
inline void SystemParameter::set_http_header(const char* value, size_t size) {
  
  http_header_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.SystemParameter.http_header)
}
inline std::string* SystemParameter::mutable_http_header() {
  
  // @@protoc_insertion_point(field_mutable:google.api.SystemParameter.http_header)
  return http_header_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemParameter::release_http_header() {
  // @@protoc_insertion_point(field_release:google.api.SystemParameter.http_header)
  
  return http_header_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemParameter::set_allocated_http_header(std::string* http_header) {
  if (http_header != nullptr) {
    
  } else {
    
  }
  http_header_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), http_header);
  // @@protoc_insertion_point(field_set_allocated:google.api.SystemParameter.http_header)
}

// string url_query_parameter = 3;
inline void SystemParameter::clear_url_query_parameter() {
  url_query_parameter_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SystemParameter::url_query_parameter() const {
  // @@protoc_insertion_point(field_get:google.api.SystemParameter.url_query_parameter)
  return url_query_parameter_.GetNoArena();
}
inline void SystemParameter::set_url_query_parameter(const std::string& value) {
  
  url_query_parameter_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.SystemParameter.url_query_parameter)
}
inline void SystemParameter::set_url_query_parameter(std::string&& value) {
  
  url_query_parameter_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.api.SystemParameter.url_query_parameter)
}
inline void SystemParameter::set_url_query_parameter(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  url_query_parameter_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.SystemParameter.url_query_parameter)
}
inline void SystemParameter::set_url_query_parameter(const char* value, size_t size) {
  
  url_query_parameter_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.SystemParameter.url_query_parameter)
}
inline std::string* SystemParameter::mutable_url_query_parameter() {
  
  // @@protoc_insertion_point(field_mutable:google.api.SystemParameter.url_query_parameter)
  return url_query_parameter_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemParameter::release_url_query_parameter() {
  // @@protoc_insertion_point(field_release:google.api.SystemParameter.url_query_parameter)
  
  return url_query_parameter_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemParameter::set_allocated_url_query_parameter(std::string* url_query_parameter) {
  if (url_query_parameter != nullptr) {
    
  } else {
    
  }
  url_query_parameter_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), url_query_parameter);
  // @@protoc_insertion_point(field_set_allocated:google.api.SystemParameter.url_query_parameter)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2fsystem_5fparameter_2eproto
