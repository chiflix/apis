/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
var google_rpc_status_pb = require('../../google/rpc/status_pb.js');
goog.exportSymbol('proto.sagittarius.media.v1.GetInfoRequest', null, global);
goog.exportSymbol('proto.sagittarius.media.v1.GetThumbRequest', null, global);
goog.exportSymbol('proto.sagittarius.media.v1.Info', null, global);
goog.exportSymbol('proto.sagittarius.media.v1.PutThumbRequest', null, global);
goog.exportSymbol('proto.sagittarius.media.v1.ThumbList', null, global);
goog.exportSymbol('proto.sagittarius.media.v1.TrackInfo', null, global);
goog.exportSymbol('proto.sagittarius.media.v1.TrackInfo.Type', null, global);
goog.exportSymbol('proto.sagittarius.media.v1.UpdateInfoRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sagittarius.media.v1.Info = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sagittarius.media.v1.Info.repeatedFields_, null);
};
goog.inherits(proto.sagittarius.media.v1.Info, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sagittarius.media.v1.Info.displayName = 'proto.sagittarius.media.v1.Info';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sagittarius.media.v1.Info.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sagittarius.media.v1.Info.prototype.toObject = function(opt_includeInstance) {
  return proto.sagittarius.media.v1.Info.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sagittarius.media.v1.Info} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagittarius.media.v1.Info.toObject = function(includeInstance, msg) {
  var f, obj = {
    mediaHash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tracksList: jspb.Message.toObjectList(msg.getTracksList(),
    proto.sagittarius.media.v1.TrackInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sagittarius.media.v1.Info}
 */
proto.sagittarius.media.v1.Info.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sagittarius.media.v1.Info;
  return proto.sagittarius.media.v1.Info.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sagittarius.media.v1.Info} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sagittarius.media.v1.Info}
 */
proto.sagittarius.media.v1.Info.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediaHash(value);
      break;
    case 2:
      var value = new proto.sagittarius.media.v1.TrackInfo;
      reader.readMessage(value,proto.sagittarius.media.v1.TrackInfo.deserializeBinaryFromReader);
      msg.addTracks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sagittarius.media.v1.Info.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sagittarius.media.v1.Info.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sagittarius.media.v1.Info} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagittarius.media.v1.Info.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMediaHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTracksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sagittarius.media.v1.TrackInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string media_hash = 1;
 * @return {string}
 */
proto.sagittarius.media.v1.Info.prototype.getMediaHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sagittarius.media.v1.Info.prototype.setMediaHash = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated TrackInfo tracks = 2;
 * @return {!Array.<!proto.sagittarius.media.v1.TrackInfo>}
 */
proto.sagittarius.media.v1.Info.prototype.getTracksList = function() {
  return /** @type{!Array.<!proto.sagittarius.media.v1.TrackInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sagittarius.media.v1.TrackInfo, 2));
};


/** @param {!Array.<!proto.sagittarius.media.v1.TrackInfo>} value */
proto.sagittarius.media.v1.Info.prototype.setTracksList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sagittarius.media.v1.TrackInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sagittarius.media.v1.TrackInfo}
 */
proto.sagittarius.media.v1.Info.prototype.addTracks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sagittarius.media.v1.TrackInfo, opt_index);
};


proto.sagittarius.media.v1.Info.prototype.clearTracksList = function() {
  this.setTracksList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sagittarius.media.v1.TrackInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sagittarius.media.v1.TrackInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sagittarius.media.v1.TrackInfo.displayName = 'proto.sagittarius.media.v1.TrackInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sagittarius.media.v1.TrackInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sagittarius.media.v1.TrackInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sagittarius.media.v1.TrackInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagittarius.media.v1.TrackInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    types: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sagittarius.media.v1.TrackInfo}
 */
proto.sagittarius.media.v1.TrackInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sagittarius.media.v1.TrackInfo;
  return proto.sagittarius.media.v1.TrackInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sagittarius.media.v1.TrackInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sagittarius.media.v1.TrackInfo}
 */
proto.sagittarius.media.v1.TrackInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sagittarius.media.v1.TrackInfo.Type} */ (reader.readEnum());
      msg.setTypes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sagittarius.media.v1.TrackInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sagittarius.media.v1.TrackInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sagittarius.media.v1.TrackInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagittarius.media.v1.TrackInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypes();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.sagittarius.media.v1.TrackInfo.Type = {
  VIDEO: 0,
  AUDIO: 1,
  TEXT: 2,
  OTHER: 3
};

/**
 * optional Type types = 1;
 * @return {!proto.sagittarius.media.v1.TrackInfo.Type}
 */
proto.sagittarius.media.v1.TrackInfo.prototype.getTypes = function() {
  return /** @type {!proto.sagittarius.media.v1.TrackInfo.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.sagittarius.media.v1.TrackInfo.Type} value */
proto.sagittarius.media.v1.TrackInfo.prototype.setTypes = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sagittarius.media.v1.GetInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sagittarius.media.v1.GetInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sagittarius.media.v1.GetInfoRequest.displayName = 'proto.sagittarius.media.v1.GetInfoRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sagittarius.media.v1.GetInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sagittarius.media.v1.GetInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sagittarius.media.v1.GetInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagittarius.media.v1.GetInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    mediaHash: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sagittarius.media.v1.GetInfoRequest}
 */
proto.sagittarius.media.v1.GetInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sagittarius.media.v1.GetInfoRequest;
  return proto.sagittarius.media.v1.GetInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sagittarius.media.v1.GetInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sagittarius.media.v1.GetInfoRequest}
 */
proto.sagittarius.media.v1.GetInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediaHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sagittarius.media.v1.GetInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sagittarius.media.v1.GetInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sagittarius.media.v1.GetInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagittarius.media.v1.GetInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMediaHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string media_hash = 1;
 * @return {string}
 */
proto.sagittarius.media.v1.GetInfoRequest.prototype.getMediaHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sagittarius.media.v1.GetInfoRequest.prototype.setMediaHash = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sagittarius.media.v1.UpdateInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sagittarius.media.v1.UpdateInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sagittarius.media.v1.UpdateInfoRequest.displayName = 'proto.sagittarius.media.v1.UpdateInfoRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sagittarius.media.v1.UpdateInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sagittarius.media.v1.UpdateInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sagittarius.media.v1.UpdateInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagittarius.media.v1.UpdateInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    mediaHash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    info: (f = msg.getInfo()) && proto.sagittarius.media.v1.Info.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sagittarius.media.v1.UpdateInfoRequest}
 */
proto.sagittarius.media.v1.UpdateInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sagittarius.media.v1.UpdateInfoRequest;
  return proto.sagittarius.media.v1.UpdateInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sagittarius.media.v1.UpdateInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sagittarius.media.v1.UpdateInfoRequest}
 */
proto.sagittarius.media.v1.UpdateInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediaHash(value);
      break;
    case 2:
      var value = new proto.sagittarius.media.v1.Info;
      reader.readMessage(value,proto.sagittarius.media.v1.Info.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sagittarius.media.v1.UpdateInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sagittarius.media.v1.UpdateInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sagittarius.media.v1.UpdateInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagittarius.media.v1.UpdateInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMediaHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sagittarius.media.v1.Info.serializeBinaryToWriter
    );
  }
};


/**
 * optional string media_hash = 1;
 * @return {string}
 */
proto.sagittarius.media.v1.UpdateInfoRequest.prototype.getMediaHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sagittarius.media.v1.UpdateInfoRequest.prototype.setMediaHash = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Info info = 2;
 * @return {?proto.sagittarius.media.v1.Info}
 */
proto.sagittarius.media.v1.UpdateInfoRequest.prototype.getInfo = function() {
  return /** @type{?proto.sagittarius.media.v1.Info} */ (
    jspb.Message.getWrapperField(this, proto.sagittarius.media.v1.Info, 2));
};


/** @param {?proto.sagittarius.media.v1.Info|undefined} value */
proto.sagittarius.media.v1.UpdateInfoRequest.prototype.setInfo = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.sagittarius.media.v1.UpdateInfoRequest.prototype.clearInfo = function() {
  this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sagittarius.media.v1.UpdateInfoRequest.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sagittarius.media.v1.GetThumbRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sagittarius.media.v1.GetThumbRequest.repeatedFields_, null);
};
goog.inherits(proto.sagittarius.media.v1.GetThumbRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sagittarius.media.v1.GetThumbRequest.displayName = 'proto.sagittarius.media.v1.GetThumbRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sagittarius.media.v1.GetThumbRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sagittarius.media.v1.GetThumbRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sagittarius.media.v1.GetThumbRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sagittarius.media.v1.GetThumbRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagittarius.media.v1.GetThumbRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    mediaHash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    thumbIdList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sagittarius.media.v1.GetThumbRequest}
 */
proto.sagittarius.media.v1.GetThumbRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sagittarius.media.v1.GetThumbRequest;
  return proto.sagittarius.media.v1.GetThumbRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sagittarius.media.v1.GetThumbRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sagittarius.media.v1.GetThumbRequest}
 */
proto.sagittarius.media.v1.GetThumbRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediaHash(value);
      break;
    case 2:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
      msg.setThumbIdList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sagittarius.media.v1.GetThumbRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sagittarius.media.v1.GetThumbRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sagittarius.media.v1.GetThumbRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagittarius.media.v1.GetThumbRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMediaHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThumbIdList();
  if (f.length > 0) {
    writer.writePackedInt32(
      2,
      f
    );
  }
};


/**
 * optional string media_hash = 1;
 * @return {string}
 */
proto.sagittarius.media.v1.GetThumbRequest.prototype.getMediaHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sagittarius.media.v1.GetThumbRequest.prototype.setMediaHash = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated int32 thumb_id = 2;
 * @return {!Array.<number>}
 */
proto.sagittarius.media.v1.GetThumbRequest.prototype.getThumbIdList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<number>} value */
proto.sagittarius.media.v1.GetThumbRequest.prototype.setThumbIdList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.sagittarius.media.v1.GetThumbRequest.prototype.addThumbId = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.sagittarius.media.v1.GetThumbRequest.prototype.clearThumbIdList = function() {
  this.setThumbIdList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sagittarius.media.v1.ThumbList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sagittarius.media.v1.ThumbList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sagittarius.media.v1.ThumbList.displayName = 'proto.sagittarius.media.v1.ThumbList';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sagittarius.media.v1.ThumbList.prototype.toObject = function(opt_includeInstance) {
  return proto.sagittarius.media.v1.ThumbList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sagittarius.media.v1.ThumbList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagittarius.media.v1.ThumbList.toObject = function(includeInstance, msg) {
  var f, obj = {
    mediaHash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    thumbMap: (f = msg.getThumbMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sagittarius.media.v1.ThumbList}
 */
proto.sagittarius.media.v1.ThumbList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sagittarius.media.v1.ThumbList;
  return proto.sagittarius.media.v1.ThumbList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sagittarius.media.v1.ThumbList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sagittarius.media.v1.ThumbList}
 */
proto.sagittarius.media.v1.ThumbList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediaHash(value);
      break;
    case 2:
      var value = msg.getThumbMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readBytes);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sagittarius.media.v1.ThumbList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sagittarius.media.v1.ThumbList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sagittarius.media.v1.ThumbList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagittarius.media.v1.ThumbList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMediaHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThumbMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeBytes);
  }
};


/**
 * optional string media_hash = 1;
 * @return {string}
 */
proto.sagittarius.media.v1.ThumbList.prototype.getMediaHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sagittarius.media.v1.ThumbList.prototype.setMediaHash = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * map<int32, bytes> thumb = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!(string|Uint8Array)>}
 */
proto.sagittarius.media.v1.ThumbList.prototype.getThumbMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!(string|Uint8Array)>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


proto.sagittarius.media.v1.ThumbList.prototype.clearThumbMap = function() {
  this.getThumbMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sagittarius.media.v1.PutThumbRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sagittarius.media.v1.PutThumbRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sagittarius.media.v1.PutThumbRequest.displayName = 'proto.sagittarius.media.v1.PutThumbRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sagittarius.media.v1.PutThumbRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sagittarius.media.v1.PutThumbRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sagittarius.media.v1.PutThumbRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagittarius.media.v1.PutThumbRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    mediaHash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    thumbId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    md5: jspb.Message.getFieldWithDefault(msg, 3, ""),
    payload: msg.getPayload_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sagittarius.media.v1.PutThumbRequest}
 */
proto.sagittarius.media.v1.PutThumbRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sagittarius.media.v1.PutThumbRequest;
  return proto.sagittarius.media.v1.PutThumbRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sagittarius.media.v1.PutThumbRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sagittarius.media.v1.PutThumbRequest}
 */
proto.sagittarius.media.v1.PutThumbRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediaHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setThumbId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMd5(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sagittarius.media.v1.PutThumbRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sagittarius.media.v1.PutThumbRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sagittarius.media.v1.PutThumbRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sagittarius.media.v1.PutThumbRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMediaHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThumbId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMd5();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPayload_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional string media_hash = 1;
 * @return {string}
 */
proto.sagittarius.media.v1.PutThumbRequest.prototype.getMediaHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sagittarius.media.v1.PutThumbRequest.prototype.setMediaHash = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 thumb_id = 2;
 * @return {number}
 */
proto.sagittarius.media.v1.PutThumbRequest.prototype.getThumbId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.sagittarius.media.v1.PutThumbRequest.prototype.setThumbId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string md5 = 3;
 * @return {string}
 */
proto.sagittarius.media.v1.PutThumbRequest.prototype.getMd5 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.sagittarius.media.v1.PutThumbRequest.prototype.setMd5 = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional bytes payload = 4;
 * @return {!(string|Uint8Array)}
 */
proto.sagittarius.media.v1.PutThumbRequest.prototype.getPayload = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes payload = 4;
 * This is a type-conversion wrapper around `getPayload()`
 * @return {string}
 */
proto.sagittarius.media.v1.PutThumbRequest.prototype.getPayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayload()));
};


/**
 * optional bytes payload = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayload()`
 * @return {!Uint8Array}
 */
proto.sagittarius.media.v1.PutThumbRequest.prototype.getPayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayload()));
};


/** @param {!(string|Uint8Array)} value */
proto.sagittarius.media.v1.PutThumbRequest.prototype.setPayload = function(value) {
  jspb.Message.setField(this, 4, value);
};


goog.object.extend(exports, proto.sagittarius.media.v1);
