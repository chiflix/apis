/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
var google_longrunning_operations_pb = require('../../../../google/longrunning/operations_pb.js');
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var google_rpc_status_pb = require('../../../../google/rpc/status_pb.js');
goog.exportSymbol('proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata', null, global);
goog.exportSymbol('proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest', null, global);
goog.exportSymbol('proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse', null, global);
goog.exportSymbol('proto.google.cloud.speech.v1beta1.RecognitionAudio', null, global);
goog.exportSymbol('proto.google.cloud.speech.v1beta1.RecognitionConfig', null, global);
goog.exportSymbol('proto.google.cloud.speech.v1beta1.RecognitionConfig.AudioEncoding', null, global);
goog.exportSymbol('proto.google.cloud.speech.v1beta1.SpeechContext', null, global);
goog.exportSymbol('proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative', null, global);
goog.exportSymbol('proto.google.cloud.speech.v1beta1.SpeechRecognitionResult', null, global);
goog.exportSymbol('proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig', null, global);
goog.exportSymbol('proto.google.cloud.speech.v1beta1.StreamingRecognitionResult', null, global);
goog.exportSymbol('proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest', null, global);
goog.exportSymbol('proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse', null, global);
goog.exportSymbol('proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.EndpointerType', null, global);
goog.exportSymbol('proto.google.cloud.speech.v1beta1.SyncRecognizeRequest', null, global);
goog.exportSymbol('proto.google.cloud.speech.v1beta1.SyncRecognizeResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.speech.v1beta1.SyncRecognizeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.cloud.speech.v1beta1.SyncRecognizeRequest.displayName = 'proto.google.cloud.speech.v1beta1.SyncRecognizeRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.speech.v1beta1.SyncRecognizeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.speech.v1beta1.SyncRecognizeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.google.cloud.speech.v1beta1.RecognitionConfig.toObject(includeInstance, f),
    audio: (f = msg.getAudio()) && proto.google.cloud.speech.v1beta1.RecognitionAudio.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.speech.v1beta1.SyncRecognizeRequest}
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.speech.v1beta1.SyncRecognizeRequest;
  return proto.google.cloud.speech.v1beta1.SyncRecognizeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.speech.v1beta1.SyncRecognizeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.speech.v1beta1.SyncRecognizeRequest}
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.speech.v1beta1.RecognitionConfig;
      reader.readMessage(value,proto.google.cloud.speech.v1beta1.RecognitionConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 2:
      var value = new proto.google.cloud.speech.v1beta1.RecognitionAudio;
      reader.readMessage(value,proto.google.cloud.speech.v1beta1.RecognitionAudio.deserializeBinaryFromReader);
      msg.setAudio(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.speech.v1beta1.SyncRecognizeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.speech.v1beta1.SyncRecognizeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.speech.v1beta1.RecognitionConfig.serializeBinaryToWriter
    );
  }
  f = message.getAudio();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.cloud.speech.v1beta1.RecognitionAudio.serializeBinaryToWriter
    );
  }
};


/**
 * optional RecognitionConfig config = 1;
 * @return {?proto.google.cloud.speech.v1beta1.RecognitionConfig}
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeRequest.prototype.getConfig = function() {
  return /** @type{?proto.google.cloud.speech.v1beta1.RecognitionConfig} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.speech.v1beta1.RecognitionConfig, 1));
};


/** @param {?proto.google.cloud.speech.v1beta1.RecognitionConfig|undefined} value */
proto.google.cloud.speech.v1beta1.SyncRecognizeRequest.prototype.setConfig = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.google.cloud.speech.v1beta1.SyncRecognizeRequest.prototype.clearConfig = function() {
  this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RecognitionAudio audio = 2;
 * @return {?proto.google.cloud.speech.v1beta1.RecognitionAudio}
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeRequest.prototype.getAudio = function() {
  return /** @type{?proto.google.cloud.speech.v1beta1.RecognitionAudio} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.speech.v1beta1.RecognitionAudio, 2));
};


/** @param {?proto.google.cloud.speech.v1beta1.RecognitionAudio|undefined} value */
proto.google.cloud.speech.v1beta1.SyncRecognizeRequest.prototype.setAudio = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.google.cloud.speech.v1beta1.SyncRecognizeRequest.prototype.clearAudio = function() {
  this.setAudio(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeRequest.prototype.hasAudio = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest.displayName = 'proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.google.cloud.speech.v1beta1.RecognitionConfig.toObject(includeInstance, f),
    audio: (f = msg.getAudio()) && proto.google.cloud.speech.v1beta1.RecognitionAudio.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest;
  return proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.speech.v1beta1.RecognitionConfig;
      reader.readMessage(value,proto.google.cloud.speech.v1beta1.RecognitionConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 2:
      var value = new proto.google.cloud.speech.v1beta1.RecognitionAudio;
      reader.readMessage(value,proto.google.cloud.speech.v1beta1.RecognitionAudio.deserializeBinaryFromReader);
      msg.setAudio(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.speech.v1beta1.RecognitionConfig.serializeBinaryToWriter
    );
  }
  f = message.getAudio();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.cloud.speech.v1beta1.RecognitionAudio.serializeBinaryToWriter
    );
  }
};


/**
 * optional RecognitionConfig config = 1;
 * @return {?proto.google.cloud.speech.v1beta1.RecognitionConfig}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest.prototype.getConfig = function() {
  return /** @type{?proto.google.cloud.speech.v1beta1.RecognitionConfig} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.speech.v1beta1.RecognitionConfig, 1));
};


/** @param {?proto.google.cloud.speech.v1beta1.RecognitionConfig|undefined} value */
proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest.prototype.setConfig = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest.prototype.clearConfig = function() {
  this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RecognitionAudio audio = 2;
 * @return {?proto.google.cloud.speech.v1beta1.RecognitionAudio}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest.prototype.getAudio = function() {
  return /** @type{?proto.google.cloud.speech.v1beta1.RecognitionAudio} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.speech.v1beta1.RecognitionAudio, 2));
};


/** @param {?proto.google.cloud.speech.v1beta1.RecognitionAudio|undefined} value */
proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest.prototype.setAudio = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest.prototype.clearAudio = function() {
  this.setAudio(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeRequest.prototype.hasAudio = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.oneofGroups_);
};
goog.inherits(proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.displayName = 'proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.StreamingRequestCase = {
  STREAMING_REQUEST_NOT_SET: 0,
  STREAMING_CONFIG: 1,
  AUDIO_CONTENT: 2
};

/**
 * @return {proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.StreamingRequestCase}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.prototype.getStreamingRequestCase = function() {
  return /** @type {proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.StreamingRequestCase} */(jspb.Message.computeOneofCase(this, proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    streamingConfig: (f = msg.getStreamingConfig()) && proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.toObject(includeInstance, f),
    audioContent: msg.getAudioContent_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest;
  return proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig;
      reader.readMessage(value,proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.deserializeBinaryFromReader);
      msg.setStreamingConfig(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAudioContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStreamingConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional StreamingRecognitionConfig streaming_config = 1;
 * @return {?proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.prototype.getStreamingConfig = function() {
  return /** @type{?proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig, 1));
};


/** @param {?proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig|undefined} value */
proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.prototype.setStreamingConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.oneofGroups_[0], value);
};


proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.prototype.clearStreamingConfig = function() {
  this.setStreamingConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.prototype.hasStreamingConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes audio_content = 2;
 * @return {!(string|Uint8Array)}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.prototype.getAudioContent = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes audio_content = 2;
 * This is a type-conversion wrapper around `getAudioContent()`
 * @return {string}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.prototype.getAudioContent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAudioContent()));
};


/**
 * optional bytes audio_content = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAudioContent()`
 * @return {!Uint8Array}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.prototype.getAudioContent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAudioContent()));
};


/** @param {!(string|Uint8Array)} value */
proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.prototype.setAudioContent = function(value) {
  jspb.Message.setOneofField(this, 2, proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.oneofGroups_[0], value);
};


proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.prototype.clearAudioContent = function() {
  jspb.Message.setOneofField(this, 2, proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeRequest.prototype.hasAudioContent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.displayName = 'proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.google.cloud.speech.v1beta1.RecognitionConfig.toObject(includeInstance, f),
    singleUtterance: jspb.Message.getFieldWithDefault(msg, 2, false),
    interimResults: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig;
  return proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.speech.v1beta1.RecognitionConfig;
      reader.readMessage(value,proto.google.cloud.speech.v1beta1.RecognitionConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSingleUtterance(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInterimResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.speech.v1beta1.RecognitionConfig.serializeBinaryToWriter
    );
  }
  f = message.getSingleUtterance();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getInterimResults();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional RecognitionConfig config = 1;
 * @return {?proto.google.cloud.speech.v1beta1.RecognitionConfig}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.prototype.getConfig = function() {
  return /** @type{?proto.google.cloud.speech.v1beta1.RecognitionConfig} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.speech.v1beta1.RecognitionConfig, 1));
};


/** @param {?proto.google.cloud.speech.v1beta1.RecognitionConfig|undefined} value */
proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.prototype.setConfig = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.prototype.clearConfig = function() {
  this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool single_utterance = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.prototype.getSingleUtterance = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.prototype.setSingleUtterance = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bool interim_results = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.prototype.getInterimResults = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.google.cloud.speech.v1beta1.StreamingRecognitionConfig.prototype.setInterimResults = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.speech.v1beta1.RecognitionConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.speech.v1beta1.RecognitionConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.cloud.speech.v1beta1.RecognitionConfig.displayName = 'proto.google.cloud.speech.v1beta1.RecognitionConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.speech.v1beta1.RecognitionConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.speech.v1beta1.RecognitionConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.speech.v1beta1.RecognitionConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.RecognitionConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    encoding: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sampleRate: jspb.Message.getFieldWithDefault(msg, 2, 0),
    languageCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    maxAlternatives: jspb.Message.getFieldWithDefault(msg, 4, 0),
    profanityFilter: jspb.Message.getFieldWithDefault(msg, 5, false),
    speechContext: (f = msg.getSpeechContext()) && proto.google.cloud.speech.v1beta1.SpeechContext.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.speech.v1beta1.RecognitionConfig}
 */
proto.google.cloud.speech.v1beta1.RecognitionConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.speech.v1beta1.RecognitionConfig;
  return proto.google.cloud.speech.v1beta1.RecognitionConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.speech.v1beta1.RecognitionConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.speech.v1beta1.RecognitionConfig}
 */
proto.google.cloud.speech.v1beta1.RecognitionConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.cloud.speech.v1beta1.RecognitionConfig.AudioEncoding} */ (reader.readEnum());
      msg.setEncoding(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSampleRate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageCode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxAlternatives(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProfanityFilter(value);
      break;
    case 6:
      var value = new proto.google.cloud.speech.v1beta1.SpeechContext;
      reader.readMessage(value,proto.google.cloud.speech.v1beta1.SpeechContext.deserializeBinaryFromReader);
      msg.setSpeechContext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.speech.v1beta1.RecognitionConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.speech.v1beta1.RecognitionConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.speech.v1beta1.RecognitionConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.RecognitionConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEncoding();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSampleRate();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLanguageCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMaxAlternatives();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getProfanityFilter();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getSpeechContext();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.google.cloud.speech.v1beta1.SpeechContext.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.google.cloud.speech.v1beta1.RecognitionConfig.AudioEncoding = {
  ENCODING_UNSPECIFIED: 0,
  LINEAR16: 1,
  FLAC: 2,
  MULAW: 3,
  AMR: 4,
  AMR_WB: 5
};

/**
 * optional AudioEncoding encoding = 1;
 * @return {!proto.google.cloud.speech.v1beta1.RecognitionConfig.AudioEncoding}
 */
proto.google.cloud.speech.v1beta1.RecognitionConfig.prototype.getEncoding = function() {
  return /** @type {!proto.google.cloud.speech.v1beta1.RecognitionConfig.AudioEncoding} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.google.cloud.speech.v1beta1.RecognitionConfig.AudioEncoding} value */
proto.google.cloud.speech.v1beta1.RecognitionConfig.prototype.setEncoding = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 sample_rate = 2;
 * @return {number}
 */
proto.google.cloud.speech.v1beta1.RecognitionConfig.prototype.getSampleRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.google.cloud.speech.v1beta1.RecognitionConfig.prototype.setSampleRate = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string language_code = 3;
 * @return {string}
 */
proto.google.cloud.speech.v1beta1.RecognitionConfig.prototype.getLanguageCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.google.cloud.speech.v1beta1.RecognitionConfig.prototype.setLanguageCode = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 max_alternatives = 4;
 * @return {number}
 */
proto.google.cloud.speech.v1beta1.RecognitionConfig.prototype.getMaxAlternatives = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.google.cloud.speech.v1beta1.RecognitionConfig.prototype.setMaxAlternatives = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional bool profanity_filter = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.google.cloud.speech.v1beta1.RecognitionConfig.prototype.getProfanityFilter = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.google.cloud.speech.v1beta1.RecognitionConfig.prototype.setProfanityFilter = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional SpeechContext speech_context = 6;
 * @return {?proto.google.cloud.speech.v1beta1.SpeechContext}
 */
proto.google.cloud.speech.v1beta1.RecognitionConfig.prototype.getSpeechContext = function() {
  return /** @type{?proto.google.cloud.speech.v1beta1.SpeechContext} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.speech.v1beta1.SpeechContext, 6));
};


/** @param {?proto.google.cloud.speech.v1beta1.SpeechContext|undefined} value */
proto.google.cloud.speech.v1beta1.RecognitionConfig.prototype.setSpeechContext = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.google.cloud.speech.v1beta1.RecognitionConfig.prototype.clearSpeechContext = function() {
  this.setSpeechContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.cloud.speech.v1beta1.RecognitionConfig.prototype.hasSpeechContext = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.speech.v1beta1.SpeechContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.speech.v1beta1.SpeechContext.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.speech.v1beta1.SpeechContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.cloud.speech.v1beta1.SpeechContext.displayName = 'proto.google.cloud.speech.v1beta1.SpeechContext';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.speech.v1beta1.SpeechContext.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.speech.v1beta1.SpeechContext.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.speech.v1beta1.SpeechContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.speech.v1beta1.SpeechContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.SpeechContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    phrasesList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.speech.v1beta1.SpeechContext}
 */
proto.google.cloud.speech.v1beta1.SpeechContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.speech.v1beta1.SpeechContext;
  return proto.google.cloud.speech.v1beta1.SpeechContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.speech.v1beta1.SpeechContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.speech.v1beta1.SpeechContext}
 */
proto.google.cloud.speech.v1beta1.SpeechContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhrases(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.speech.v1beta1.SpeechContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.speech.v1beta1.SpeechContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.speech.v1beta1.SpeechContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.SpeechContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhrasesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string phrases = 1;
 * @return {!Array.<string>}
 */
proto.google.cloud.speech.v1beta1.SpeechContext.prototype.getPhrasesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.google.cloud.speech.v1beta1.SpeechContext.prototype.setPhrasesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.google.cloud.speech.v1beta1.SpeechContext.prototype.addPhrases = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.google.cloud.speech.v1beta1.SpeechContext.prototype.clearPhrasesList = function() {
  this.setPhrasesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.speech.v1beta1.RecognitionAudio = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.cloud.speech.v1beta1.RecognitionAudio.oneofGroups_);
};
goog.inherits(proto.google.cloud.speech.v1beta1.RecognitionAudio, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.cloud.speech.v1beta1.RecognitionAudio.displayName = 'proto.google.cloud.speech.v1beta1.RecognitionAudio';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.cloud.speech.v1beta1.RecognitionAudio.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.google.cloud.speech.v1beta1.RecognitionAudio.AudioSourceCase = {
  AUDIO_SOURCE_NOT_SET: 0,
  CONTENT: 1,
  URI: 2
};

/**
 * @return {proto.google.cloud.speech.v1beta1.RecognitionAudio.AudioSourceCase}
 */
proto.google.cloud.speech.v1beta1.RecognitionAudio.prototype.getAudioSourceCase = function() {
  return /** @type {proto.google.cloud.speech.v1beta1.RecognitionAudio.AudioSourceCase} */(jspb.Message.computeOneofCase(this, proto.google.cloud.speech.v1beta1.RecognitionAudio.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.speech.v1beta1.RecognitionAudio.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.speech.v1beta1.RecognitionAudio.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.speech.v1beta1.RecognitionAudio} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.RecognitionAudio.toObject = function(includeInstance, msg) {
  var f, obj = {
    content: msg.getContent_asB64(),
    uri: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.speech.v1beta1.RecognitionAudio}
 */
proto.google.cloud.speech.v1beta1.RecognitionAudio.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.speech.v1beta1.RecognitionAudio;
  return proto.google.cloud.speech.v1beta1.RecognitionAudio.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.speech.v1beta1.RecognitionAudio} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.speech.v1beta1.RecognitionAudio}
 */
proto.google.cloud.speech.v1beta1.RecognitionAudio.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.speech.v1beta1.RecognitionAudio.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.speech.v1beta1.RecognitionAudio.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.speech.v1beta1.RecognitionAudio} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.RecognitionAudio.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes content = 1;
 * @return {!(string|Uint8Array)}
 */
proto.google.cloud.speech.v1beta1.RecognitionAudio.prototype.getContent = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes content = 1;
 * This is a type-conversion wrapper around `getContent()`
 * @return {string}
 */
proto.google.cloud.speech.v1beta1.RecognitionAudio.prototype.getContent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContent()));
};


/**
 * optional bytes content = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContent()`
 * @return {!Uint8Array}
 */
proto.google.cloud.speech.v1beta1.RecognitionAudio.prototype.getContent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContent()));
};


/** @param {!(string|Uint8Array)} value */
proto.google.cloud.speech.v1beta1.RecognitionAudio.prototype.setContent = function(value) {
  jspb.Message.setOneofField(this, 1, proto.google.cloud.speech.v1beta1.RecognitionAudio.oneofGroups_[0], value);
};


proto.google.cloud.speech.v1beta1.RecognitionAudio.prototype.clearContent = function() {
  jspb.Message.setOneofField(this, 1, proto.google.cloud.speech.v1beta1.RecognitionAudio.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.cloud.speech.v1beta1.RecognitionAudio.prototype.hasContent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string uri = 2;
 * @return {string}
 */
proto.google.cloud.speech.v1beta1.RecognitionAudio.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.google.cloud.speech.v1beta1.RecognitionAudio.prototype.setUri = function(value) {
  jspb.Message.setOneofField(this, 2, proto.google.cloud.speech.v1beta1.RecognitionAudio.oneofGroups_[0], value);
};


proto.google.cloud.speech.v1beta1.RecognitionAudio.prototype.clearUri = function() {
  jspb.Message.setOneofField(this, 2, proto.google.cloud.speech.v1beta1.RecognitionAudio.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.cloud.speech.v1beta1.RecognitionAudio.prototype.hasUri = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.speech.v1beta1.SyncRecognizeResponse.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.speech.v1beta1.SyncRecognizeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.cloud.speech.v1beta1.SyncRecognizeResponse.displayName = 'proto.google.cloud.speech.v1beta1.SyncRecognizeResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.speech.v1beta1.SyncRecognizeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.speech.v1beta1.SyncRecognizeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.speech.v1beta1.SyncRecognizeResponse}
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.speech.v1beta1.SyncRecognizeResponse;
  return proto.google.cloud.speech.v1beta1.SyncRecognizeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.speech.v1beta1.SyncRecognizeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.speech.v1beta1.SyncRecognizeResponse}
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.google.cloud.speech.v1beta1.SpeechRecognitionResult;
      reader.readMessage(value,proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.speech.v1beta1.SyncRecognizeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.speech.v1beta1.SyncRecognizeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SpeechRecognitionResult results = 2;
 * @return {!Array.<!proto.google.cloud.speech.v1beta1.SpeechRecognitionResult>}
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeResponse.prototype.getResultsList = function() {
  return /** @type{!Array.<!proto.google.cloud.speech.v1beta1.SpeechRecognitionResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.cloud.speech.v1beta1.SpeechRecognitionResult, 2));
};


/** @param {!Array.<!proto.google.cloud.speech.v1beta1.SpeechRecognitionResult>} value */
proto.google.cloud.speech.v1beta1.SyncRecognizeResponse.prototype.setResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.cloud.speech.v1beta1.SpeechRecognitionResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.cloud.speech.v1beta1.SpeechRecognitionResult}
 */
proto.google.cloud.speech.v1beta1.SyncRecognizeResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.cloud.speech.v1beta1.SpeechRecognitionResult, opt_index);
};


proto.google.cloud.speech.v1beta1.SyncRecognizeResponse.prototype.clearResultsList = function() {
  this.setResultsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse.displayName = 'proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse;
  return proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.google.cloud.speech.v1beta1.SpeechRecognitionResult;
      reader.readMessage(value,proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SpeechRecognitionResult results = 2;
 * @return {!Array.<!proto.google.cloud.speech.v1beta1.SpeechRecognitionResult>}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse.prototype.getResultsList = function() {
  return /** @type{!Array.<!proto.google.cloud.speech.v1beta1.SpeechRecognitionResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.cloud.speech.v1beta1.SpeechRecognitionResult, 2));
};


/** @param {!Array.<!proto.google.cloud.speech.v1beta1.SpeechRecognitionResult>} value */
proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse.prototype.setResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.cloud.speech.v1beta1.SpeechRecognitionResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.cloud.speech.v1beta1.SpeechRecognitionResult}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.cloud.speech.v1beta1.SpeechRecognitionResult, opt_index);
};


proto.google.cloud.speech.v1beta1.AsyncRecognizeResponse.prototype.clearResultsList = function() {
  this.setResultsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.displayName = 'proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    progressPercent: jspb.Message.getFieldWithDefault(msg, 1, 0),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastUpdateTime: (f = msg.getLastUpdateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata;
  return proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProgressPercent(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastUpdateTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProgressPercent();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastUpdateTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 progress_percent = 1;
 * @return {number}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.prototype.getProgressPercent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.prototype.setProgressPercent = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp start_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.prototype.setStartTime = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.prototype.clearStartTime = function() {
  this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp last_update_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.prototype.getLastUpdateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.prototype.setLastUpdateTime = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.prototype.clearLastUpdateTime = function() {
  this.setLastUpdateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.cloud.speech.v1beta1.AsyncRecognizeMetadata.prototype.hasLastUpdateTime = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.displayName = 'proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.toObject, includeInstance),
    resultIndex: jspb.Message.getFieldWithDefault(msg, 3, 0),
    endpointerType: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse;
  return proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 2:
      var value = new proto.google.cloud.speech.v1beta1.StreamingRecognitionResult;
      reader.readMessage(value,proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResultIndex(value);
      break;
    case 4:
      var value = /** @type {!proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.EndpointerType} */ (reader.readEnum());
      msg.setEndpointerType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.serializeBinaryToWriter
    );
  }
  f = message.getResultIndex();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getEndpointerType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.EndpointerType = {
  ENDPOINTER_EVENT_UNSPECIFIED: 0,
  START_OF_SPEECH: 1,
  END_OF_SPEECH: 2,
  END_OF_AUDIO: 3,
  END_OF_UTTERANCE: 4
};

/**
 * optional google.rpc.Status error = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.prototype.getError = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/** @param {?proto.google.rpc.Status|undefined} value */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.prototype.setError = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated StreamingRecognitionResult results = 2;
 * @return {!Array.<!proto.google.cloud.speech.v1beta1.StreamingRecognitionResult>}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.prototype.getResultsList = function() {
  return /** @type{!Array.<!proto.google.cloud.speech.v1beta1.StreamingRecognitionResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.cloud.speech.v1beta1.StreamingRecognitionResult, 2));
};


/** @param {!Array.<!proto.google.cloud.speech.v1beta1.StreamingRecognitionResult>} value */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.prototype.setResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.cloud.speech.v1beta1.StreamingRecognitionResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.cloud.speech.v1beta1.StreamingRecognitionResult}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.cloud.speech.v1beta1.StreamingRecognitionResult, opt_index);
};


proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.prototype.clearResultsList = function() {
  this.setResultsList([]);
};


/**
 * optional int32 result_index = 3;
 * @return {number}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.prototype.getResultIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.prototype.setResultIndex = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional EndpointerType endpointer_type = 4;
 * @return {!proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.EndpointerType}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.prototype.getEndpointerType = function() {
  return /** @type {!proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.EndpointerType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.EndpointerType} value */
proto.google.cloud.speech.v1beta1.StreamingRecognizeResponse.prototype.setEndpointerType = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.speech.v1beta1.StreamingRecognitionResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.displayName = 'proto.google.cloud.speech.v1beta1.StreamingRecognitionResult';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.speech.v1beta1.StreamingRecognitionResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    alternativesList: jspb.Message.toObjectList(msg.getAlternativesList(),
    proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.toObject, includeInstance),
    isFinal: jspb.Message.getFieldWithDefault(msg, 2, false),
    stability: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.speech.v1beta1.StreamingRecognitionResult}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.speech.v1beta1.StreamingRecognitionResult;
  return proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.speech.v1beta1.StreamingRecognitionResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.speech.v1beta1.StreamingRecognitionResult}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative;
      reader.readMessage(value,proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.deserializeBinaryFromReader);
      msg.addAlternatives(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsFinal(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setStability(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.speech.v1beta1.StreamingRecognitionResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlternativesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.serializeBinaryToWriter
    );
  }
  f = message.getIsFinal();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getStability();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * repeated SpeechRecognitionAlternative alternatives = 1;
 * @return {!Array.<!proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative>}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.prototype.getAlternativesList = function() {
  return /** @type{!Array.<!proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative, 1));
};


/** @param {!Array.<!proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative>} value */
proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.prototype.setAlternativesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.prototype.addAlternatives = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative, opt_index);
};


proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.prototype.clearAlternativesList = function() {
  this.setAlternativesList([]);
};


/**
 * optional bool is_final = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.prototype.getIsFinal = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.prototype.setIsFinal = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional float stability = 3;
 * @return {number}
 */
proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.prototype.getStability = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.google.cloud.speech.v1beta1.StreamingRecognitionResult.prototype.setStability = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.speech.v1beta1.SpeechRecognitionResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.displayName = 'proto.google.cloud.speech.v1beta1.SpeechRecognitionResult';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.speech.v1beta1.SpeechRecognitionResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    alternativesList: jspb.Message.toObjectList(msg.getAlternativesList(),
    proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.speech.v1beta1.SpeechRecognitionResult}
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.speech.v1beta1.SpeechRecognitionResult;
  return proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.speech.v1beta1.SpeechRecognitionResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.speech.v1beta1.SpeechRecognitionResult}
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative;
      reader.readMessage(value,proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.deserializeBinaryFromReader);
      msg.addAlternatives(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.speech.v1beta1.SpeechRecognitionResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlternativesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SpeechRecognitionAlternative alternatives = 1;
 * @return {!Array.<!proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative>}
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.prototype.getAlternativesList = function() {
  return /** @type{!Array.<!proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative, 1));
};


/** @param {!Array.<!proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative>} value */
proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.prototype.setAlternativesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative}
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.prototype.addAlternatives = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative, opt_index);
};


proto.google.cloud.speech.v1beta1.SpeechRecognitionResult.prototype.clearAlternativesList = function() {
  this.setAlternativesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.displayName = 'proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.toObject = function(includeInstance, msg) {
  var f, obj = {
    transcript: jspb.Message.getFieldWithDefault(msg, 1, ""),
    confidence: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative}
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative;
  return proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative}
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTranscript(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTranscript();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional string transcript = 1;
 * @return {string}
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.prototype.getTranscript = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.prototype.setTranscript = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional float confidence = 2;
 * @return {number}
 */
proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.prototype.getConfidence = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.google.cloud.speech.v1beta1.SpeechRecognitionAlternative.prototype.setConfidence = function(value) {
  jspb.Message.setField(this, 2, value);
};


goog.object.extend(exports, proto.google.cloud.speech.v1beta1);
