// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/api/service.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// `Service` is the root object of Google service configuration schema. It
/// describes basic information about a service, such as the name and the
/// title, and delegates other aspects to sub-sections. Each sub-section is
/// either a proto message or a repeated proto message that configures a
/// specific aspect, such as auth. See each proto message definition for details.
///
/// Example:
///
///     type: google.api.Service
///     config_version: 3
///     name: calendar.googleapis.com
///     title: Google Calendar API
///     apis:
///     - name: google.calendar.v3.Calendar
///     authentication:
///       providers:
///       - id: google_calendar_auth
///         jwks_uri: https://www.googleapis.com/oauth2/v1/certs
///         issuer: https://securetoken.google.com
///       rules:
///       - selector: "*"
///         requirements:
///           provider_id: google_calendar_auth
public struct Google_Api_Service {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// The semantic version of the service configuration. The config version
  /// affects the interpretation of the service configuration. For example,
  /// certain features are enabled by default for certain config versions.
  /// The latest config version is `3`.
  public var configVersion: SwiftProtobuf.Google_Protobuf_UInt32Value {
    get {return _storage._configVersion ?? SwiftProtobuf.Google_Protobuf_UInt32Value()}
    set {_uniqueStorage()._configVersion = newValue}
  }
  /// Returns true if `configVersion` has been explicitly set.
  public var hasConfigVersion: Bool {return _storage._configVersion != nil}
  /// Clears the value of `configVersion`. Subsequent reads from it will return its default value.
  public mutating func clearConfigVersion() {_uniqueStorage()._configVersion = nil}

  /// The DNS address at which this service is available,
  /// e.g. `calendar.googleapis.com`.
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  /// A unique ID for a specific instance of this message, typically assigned
  /// by the client for tracking purpose. If empty, the server may choose to
  /// generate one instead.
  public var id: String {
    get {return _storage._id}
    set {_uniqueStorage()._id = newValue}
  }

  /// The product title for this service.
  public var title: String {
    get {return _storage._title}
    set {_uniqueStorage()._title = newValue}
  }

  /// The Google project that owns this service.
  public var producerProjectID: String {
    get {return _storage._producerProjectID}
    set {_uniqueStorage()._producerProjectID = newValue}
  }

  /// A list of API interfaces exported by this service. Only the `name` field
  /// of the [google.protobuf.Api][google.protobuf.Api] needs to be provided by the configuration
  /// author, as the remaining fields will be derived from the IDL during the
  /// normalization process. It is an error to specify an API interface here
  /// which cannot be resolved against the associated IDL files.
  public var apis: [SwiftProtobuf.Google_Protobuf_Api] {
    get {return _storage._apis}
    set {_uniqueStorage()._apis = newValue}
  }

  /// A list of all proto message types included in this API service.
  /// Types referenced directly or indirectly by the `apis` are
  /// automatically included.  Messages which are not referenced but
  /// shall be included, such as types used by the `google.protobuf.Any` type,
  /// should be listed here by name. Example:
  ///
  ///     types:
  ///     - name: google.protobuf.Int32
  public var types: [SwiftProtobuf.Google_Protobuf_Type] {
    get {return _storage._types}
    set {_uniqueStorage()._types = newValue}
  }

  /// A list of all enum types included in this API service.  Enums
  /// referenced directly or indirectly by the `apis` are automatically
  /// included.  Enums which are not referenced but shall be included
  /// should be listed here by name. Example:
  ///
  ///     enums:
  ///     - name: google.someapi.v1.SomeEnum
  public var enums: [SwiftProtobuf.Google_Protobuf_Enum] {
    get {return _storage._enums}
    set {_uniqueStorage()._enums = newValue}
  }

  /// Additional API documentation.
  public var documentation: Google_Api_Documentation {
    get {return _storage._documentation ?? Google_Api_Documentation()}
    set {_uniqueStorage()._documentation = newValue}
  }
  /// Returns true if `documentation` has been explicitly set.
  public var hasDocumentation: Bool {return _storage._documentation != nil}
  /// Clears the value of `documentation`. Subsequent reads from it will return its default value.
  public mutating func clearDocumentation() {_uniqueStorage()._documentation = nil}

  /// API backend configuration.
  public var backend: Google_Api_Backend {
    get {return _storage._backend ?? Google_Api_Backend()}
    set {_uniqueStorage()._backend = newValue}
  }
  /// Returns true if `backend` has been explicitly set.
  public var hasBackend: Bool {return _storage._backend != nil}
  /// Clears the value of `backend`. Subsequent reads from it will return its default value.
  public mutating func clearBackend() {_uniqueStorage()._backend = nil}

  /// HTTP configuration.
  public var http: Google_Api_Http {
    get {return _storage._http ?? Google_Api_Http()}
    set {_uniqueStorage()._http = newValue}
  }
  /// Returns true if `http` has been explicitly set.
  public var hasHTTP: Bool {return _storage._http != nil}
  /// Clears the value of `http`. Subsequent reads from it will return its default value.
  public mutating func clearHTTP() {_uniqueStorage()._http = nil}

  /// Quota configuration.
  public var quota: Google_Api_Quota {
    get {return _storage._quota ?? Google_Api_Quota()}
    set {_uniqueStorage()._quota = newValue}
  }
  /// Returns true if `quota` has been explicitly set.
  public var hasQuota: Bool {return _storage._quota != nil}
  /// Clears the value of `quota`. Subsequent reads from it will return its default value.
  public mutating func clearQuota() {_uniqueStorage()._quota = nil}

  /// Auth configuration.
  public var authentication: Google_Api_Authentication {
    get {return _storage._authentication ?? Google_Api_Authentication()}
    set {_uniqueStorage()._authentication = newValue}
  }
  /// Returns true if `authentication` has been explicitly set.
  public var hasAuthentication: Bool {return _storage._authentication != nil}
  /// Clears the value of `authentication`. Subsequent reads from it will return its default value.
  public mutating func clearAuthentication() {_uniqueStorage()._authentication = nil}

  /// Context configuration.
  public var context: Google_Api_Context {
    get {return _storage._context ?? Google_Api_Context()}
    set {_uniqueStorage()._context = newValue}
  }
  /// Returns true if `context` has been explicitly set.
  public var hasContext: Bool {return _storage._context != nil}
  /// Clears the value of `context`. Subsequent reads from it will return its default value.
  public mutating func clearContext() {_uniqueStorage()._context = nil}

  /// Configuration controlling usage of this service.
  public var usage: Google_Api_Usage {
    get {return _storage._usage ?? Google_Api_Usage()}
    set {_uniqueStorage()._usage = newValue}
  }
  /// Returns true if `usage` has been explicitly set.
  public var hasUsage: Bool {return _storage._usage != nil}
  /// Clears the value of `usage`. Subsequent reads from it will return its default value.
  public mutating func clearUsage() {_uniqueStorage()._usage = nil}

  /// Configuration for network endpoints.  If this is empty, then an endpoint
  /// with the same name as the service is automatically generated to service all
  /// defined APIs.
  public var endpoints: [Google_Api_Endpoint] {
    get {return _storage._endpoints}
    set {_uniqueStorage()._endpoints = newValue}
  }

  /// Configuration for the service control plane.
  public var control: Google_Api_Control {
    get {return _storage._control ?? Google_Api_Control()}
    set {_uniqueStorage()._control = newValue}
  }
  /// Returns true if `control` has been explicitly set.
  public var hasControl: Bool {return _storage._control != nil}
  /// Clears the value of `control`. Subsequent reads from it will return its default value.
  public mutating func clearControl() {_uniqueStorage()._control = nil}

  /// Defines the logs used by this service.
  public var logs: [Google_Api_LogDescriptor] {
    get {return _storage._logs}
    set {_uniqueStorage()._logs = newValue}
  }

  /// Defines the metrics used by this service.
  public var metrics: [Google_Api_MetricDescriptor] {
    get {return _storage._metrics}
    set {_uniqueStorage()._metrics = newValue}
  }

  /// Defines the monitored resources used by this service. This is required
  /// by the [Service.monitoring][google.api.Service.monitoring] and [Service.logging][google.api.Service.logging] configurations.
  public var monitoredResources: [Google_Api_MonitoredResourceDescriptor] {
    get {return _storage._monitoredResources}
    set {_uniqueStorage()._monitoredResources = newValue}
  }

  /// Billing configuration.
  public var billing: Google_Api_Billing {
    get {return _storage._billing ?? Google_Api_Billing()}
    set {_uniqueStorage()._billing = newValue}
  }
  /// Returns true if `billing` has been explicitly set.
  public var hasBilling: Bool {return _storage._billing != nil}
  /// Clears the value of `billing`. Subsequent reads from it will return its default value.
  public mutating func clearBilling() {_uniqueStorage()._billing = nil}

  /// Logging configuration.
  public var logging: Google_Api_Logging {
    get {return _storage._logging ?? Google_Api_Logging()}
    set {_uniqueStorage()._logging = newValue}
  }
  /// Returns true if `logging` has been explicitly set.
  public var hasLogging: Bool {return _storage._logging != nil}
  /// Clears the value of `logging`. Subsequent reads from it will return its default value.
  public mutating func clearLogging() {_uniqueStorage()._logging = nil}

  /// Monitoring configuration.
  public var monitoring: Google_Api_Monitoring {
    get {return _storage._monitoring ?? Google_Api_Monitoring()}
    set {_uniqueStorage()._monitoring = newValue}
  }
  /// Returns true if `monitoring` has been explicitly set.
  public var hasMonitoring: Bool {return _storage._monitoring != nil}
  /// Clears the value of `monitoring`. Subsequent reads from it will return its default value.
  public mutating func clearMonitoring() {_uniqueStorage()._monitoring = nil}

  /// System parameter configuration.
  public var systemParameters: Google_Api_SystemParameters {
    get {return _storage._systemParameters ?? Google_Api_SystemParameters()}
    set {_uniqueStorage()._systemParameters = newValue}
  }
  /// Returns true if `systemParameters` has been explicitly set.
  public var hasSystemParameters: Bool {return _storage._systemParameters != nil}
  /// Clears the value of `systemParameters`. Subsequent reads from it will return its default value.
  public mutating func clearSystemParameters() {_uniqueStorage()._systemParameters = nil}

  /// Output only. The source information for this configuration if available.
  public var sourceInfo: Google_Api_SourceInfo {
    get {return _storage._sourceInfo ?? Google_Api_SourceInfo()}
    set {_uniqueStorage()._sourceInfo = newValue}
  }
  /// Returns true if `sourceInfo` has been explicitly set.
  public var hasSourceInfo: Bool {return _storage._sourceInfo != nil}
  /// Clears the value of `sourceInfo`. Subsequent reads from it will return its default value.
  public mutating func clearSourceInfo() {_uniqueStorage()._sourceInfo = nil}

  /// Experimental configuration.
  public var experimental: Google_Api_Experimental {
    get {return _storage._experimental ?? Google_Api_Experimental()}
    set {_uniqueStorage()._experimental = newValue}
  }
  /// Returns true if `experimental` has been explicitly set.
  public var hasExperimental: Bool {return _storage._experimental != nil}
  /// Clears the value of `experimental`. Subsequent reads from it will return its default value.
  public mutating func clearExperimental() {_uniqueStorage()._experimental = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.api"

extension Google_Api_Service: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Service"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    20: .standard(proto: "config_version"),
    1: .same(proto: "name"),
    33: .same(proto: "id"),
    2: .same(proto: "title"),
    22: .standard(proto: "producer_project_id"),
    3: .same(proto: "apis"),
    4: .same(proto: "types"),
    5: .same(proto: "enums"),
    6: .same(proto: "documentation"),
    8: .same(proto: "backend"),
    9: .same(proto: "http"),
    10: .same(proto: "quota"),
    11: .same(proto: "authentication"),
    12: .same(proto: "context"),
    15: .same(proto: "usage"),
    18: .same(proto: "endpoints"),
    21: .same(proto: "control"),
    23: .same(proto: "logs"),
    24: .same(proto: "metrics"),
    25: .standard(proto: "monitored_resources"),
    26: .same(proto: "billing"),
    27: .same(proto: "logging"),
    28: .same(proto: "monitoring"),
    29: .standard(proto: "system_parameters"),
    37: .standard(proto: "source_info"),
    101: .same(proto: "experimental"),
  ]

  fileprivate class _StorageClass {
    var _configVersion: SwiftProtobuf.Google_Protobuf_UInt32Value? = nil
    var _name: String = String()
    var _id: String = String()
    var _title: String = String()
    var _producerProjectID: String = String()
    var _apis: [SwiftProtobuf.Google_Protobuf_Api] = []
    var _types: [SwiftProtobuf.Google_Protobuf_Type] = []
    var _enums: [SwiftProtobuf.Google_Protobuf_Enum] = []
    var _documentation: Google_Api_Documentation? = nil
    var _backend: Google_Api_Backend? = nil
    var _http: Google_Api_Http? = nil
    var _quota: Google_Api_Quota? = nil
    var _authentication: Google_Api_Authentication? = nil
    var _context: Google_Api_Context? = nil
    var _usage: Google_Api_Usage? = nil
    var _endpoints: [Google_Api_Endpoint] = []
    var _control: Google_Api_Control? = nil
    var _logs: [Google_Api_LogDescriptor] = []
    var _metrics: [Google_Api_MetricDescriptor] = []
    var _monitoredResources: [Google_Api_MonitoredResourceDescriptor] = []
    var _billing: Google_Api_Billing? = nil
    var _logging: Google_Api_Logging? = nil
    var _monitoring: Google_Api_Monitoring? = nil
    var _systemParameters: Google_Api_SystemParameters? = nil
    var _sourceInfo: Google_Api_SourceInfo? = nil
    var _experimental: Google_Api_Experimental? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _configVersion = source._configVersion
      _name = source._name
      _id = source._id
      _title = source._title
      _producerProjectID = source._producerProjectID
      _apis = source._apis
      _types = source._types
      _enums = source._enums
      _documentation = source._documentation
      _backend = source._backend
      _http = source._http
      _quota = source._quota
      _authentication = source._authentication
      _context = source._context
      _usage = source._usage
      _endpoints = source._endpoints
      _control = source._control
      _logs = source._logs
      _metrics = source._metrics
      _monitoredResources = source._monitoredResources
      _billing = source._billing
      _logging = source._logging
      _monitoring = source._monitoring
      _systemParameters = source._systemParameters
      _sourceInfo = source._sourceInfo
      _experimental = source._experimental
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._name)
        case 2: try decoder.decodeSingularStringField(value: &_storage._title)
        case 3: try decoder.decodeRepeatedMessageField(value: &_storage._apis)
        case 4: try decoder.decodeRepeatedMessageField(value: &_storage._types)
        case 5: try decoder.decodeRepeatedMessageField(value: &_storage._enums)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._documentation)
        case 8: try decoder.decodeSingularMessageField(value: &_storage._backend)
        case 9: try decoder.decodeSingularMessageField(value: &_storage._http)
        case 10: try decoder.decodeSingularMessageField(value: &_storage._quota)
        case 11: try decoder.decodeSingularMessageField(value: &_storage._authentication)
        case 12: try decoder.decodeSingularMessageField(value: &_storage._context)
        case 15: try decoder.decodeSingularMessageField(value: &_storage._usage)
        case 18: try decoder.decodeRepeatedMessageField(value: &_storage._endpoints)
        case 20: try decoder.decodeSingularMessageField(value: &_storage._configVersion)
        case 21: try decoder.decodeSingularMessageField(value: &_storage._control)
        case 22: try decoder.decodeSingularStringField(value: &_storage._producerProjectID)
        case 23: try decoder.decodeRepeatedMessageField(value: &_storage._logs)
        case 24: try decoder.decodeRepeatedMessageField(value: &_storage._metrics)
        case 25: try decoder.decodeRepeatedMessageField(value: &_storage._monitoredResources)
        case 26: try decoder.decodeSingularMessageField(value: &_storage._billing)
        case 27: try decoder.decodeSingularMessageField(value: &_storage._logging)
        case 28: try decoder.decodeSingularMessageField(value: &_storage._monitoring)
        case 29: try decoder.decodeSingularMessageField(value: &_storage._systemParameters)
        case 33: try decoder.decodeSingularStringField(value: &_storage._id)
        case 37: try decoder.decodeSingularMessageField(value: &_storage._sourceInfo)
        case 101: try decoder.decodeSingularMessageField(value: &_storage._experimental)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._name.isEmpty {
        try visitor.visitSingularStringField(value: _storage._name, fieldNumber: 1)
      }
      if !_storage._title.isEmpty {
        try visitor.visitSingularStringField(value: _storage._title, fieldNumber: 2)
      }
      if !_storage._apis.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._apis, fieldNumber: 3)
      }
      if !_storage._types.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._types, fieldNumber: 4)
      }
      if !_storage._enums.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._enums, fieldNumber: 5)
      }
      if let v = _storage._documentation {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if let v = _storage._backend {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
      if let v = _storage._http {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if let v = _storage._quota {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      }
      if let v = _storage._authentication {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
      if let v = _storage._context {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
      }
      if let v = _storage._usage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 15)
      }
      if !_storage._endpoints.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._endpoints, fieldNumber: 18)
      }
      if let v = _storage._configVersion {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 20)
      }
      if let v = _storage._control {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 21)
      }
      if !_storage._producerProjectID.isEmpty {
        try visitor.visitSingularStringField(value: _storage._producerProjectID, fieldNumber: 22)
      }
      if !_storage._logs.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._logs, fieldNumber: 23)
      }
      if !_storage._metrics.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._metrics, fieldNumber: 24)
      }
      if !_storage._monitoredResources.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._monitoredResources, fieldNumber: 25)
      }
      if let v = _storage._billing {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 26)
      }
      if let v = _storage._logging {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 27)
      }
      if let v = _storage._monitoring {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 28)
      }
      if let v = _storage._systemParameters {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 29)
      }
      if !_storage._id.isEmpty {
        try visitor.visitSingularStringField(value: _storage._id, fieldNumber: 33)
      }
      if let v = _storage._sourceInfo {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 37)
      }
      if let v = _storage._experimental {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 101)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Api_Service, rhs: Google_Api_Service) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._configVersion != rhs_storage._configVersion {return false}
        if _storage._name != rhs_storage._name {return false}
        if _storage._id != rhs_storage._id {return false}
        if _storage._title != rhs_storage._title {return false}
        if _storage._producerProjectID != rhs_storage._producerProjectID {return false}
        if _storage._apis != rhs_storage._apis {return false}
        if _storage._types != rhs_storage._types {return false}
        if _storage._enums != rhs_storage._enums {return false}
        if _storage._documentation != rhs_storage._documentation {return false}
        if _storage._backend != rhs_storage._backend {return false}
        if _storage._http != rhs_storage._http {return false}
        if _storage._quota != rhs_storage._quota {return false}
        if _storage._authentication != rhs_storage._authentication {return false}
        if _storage._context != rhs_storage._context {return false}
        if _storage._usage != rhs_storage._usage {return false}
        if _storage._endpoints != rhs_storage._endpoints {return false}
        if _storage._control != rhs_storage._control {return false}
        if _storage._logs != rhs_storage._logs {return false}
        if _storage._metrics != rhs_storage._metrics {return false}
        if _storage._monitoredResources != rhs_storage._monitoredResources {return false}
        if _storage._billing != rhs_storage._billing {return false}
        if _storage._logging != rhs_storage._logging {return false}
        if _storage._monitoring != rhs_storage._monitoring {return false}
        if _storage._systemParameters != rhs_storage._systemParameters {return false}
        if _storage._sourceInfo != rhs_storage._sourceInfo {return false}
        if _storage._experimental != rhs_storage._experimental {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
