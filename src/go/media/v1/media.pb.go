// Code generated by protoc-gen-go. DO NOT EDIT.
// source: media/v1/media.proto

package media

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	status "google.golang.org/genproto/googleapis/rpc/status"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TrackInfo_Type int32

const (
	TrackInfo_VIDEO TrackInfo_Type = 0
	TrackInfo_AUDIO TrackInfo_Type = 1
	TrackInfo_TEXT  TrackInfo_Type = 2
	TrackInfo_OTHER TrackInfo_Type = 3
)

var TrackInfo_Type_name = map[int32]string{
	0: "VIDEO",
	1: "AUDIO",
	2: "TEXT",
	3: "OTHER",
}

var TrackInfo_Type_value = map[string]int32{
	"VIDEO": 0,
	"AUDIO": 1,
	"TEXT":  2,
	"OTHER": 3,
}

func (x TrackInfo_Type) String() string {
	return proto.EnumName(TrackInfo_Type_name, int32(x))
}

func (TrackInfo_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d7bdbb3b37c87733, []int{1, 0}
}

type Info struct {
	// Resource id of the media. It must have the format of "media/*/info".
	// For example: "media/1111-2222-3333-4444/info".
	MediaHash            string       `protobuf:"bytes,1,opt,name=media_hash,json=mediaHash,proto3" json:"media_hash,omitempty"`
	Tracks               []*TrackInfo `protobuf:"bytes,2,rep,name=tracks,proto3" json:"tracks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Info) Reset()         { *m = Info{} }
func (m *Info) String() string { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()    {}
func (*Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7bdbb3b37c87733, []int{0}
}

func (m *Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Info.Unmarshal(m, b)
}
func (m *Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Info.Marshal(b, m, deterministic)
}
func (m *Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Info.Merge(m, src)
}
func (m *Info) XXX_Size() int {
	return xxx_messageInfo_Info.Size(m)
}
func (m *Info) XXX_DiscardUnknown() {
	xxx_messageInfo_Info.DiscardUnknown(m)
}

var xxx_messageInfo_Info proto.InternalMessageInfo

func (m *Info) GetMediaHash() string {
	if m != nil {
		return m.MediaHash
	}
	return ""
}

func (m *Info) GetTracks() []*TrackInfo {
	if m != nil {
		return m.Tracks
	}
	return nil
}

type TrackInfo struct {
	Types                TrackInfo_Type `protobuf:"varint,1,opt,name=types,proto3,enum=sagittarius.media.v1.TrackInfo_Type" json:"types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TrackInfo) Reset()         { *m = TrackInfo{} }
func (m *TrackInfo) String() string { return proto.CompactTextString(m) }
func (*TrackInfo) ProtoMessage()    {}
func (*TrackInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7bdbb3b37c87733, []int{1}
}

func (m *TrackInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackInfo.Unmarshal(m, b)
}
func (m *TrackInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackInfo.Marshal(b, m, deterministic)
}
func (m *TrackInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackInfo.Merge(m, src)
}
func (m *TrackInfo) XXX_Size() int {
	return xxx_messageInfo_TrackInfo.Size(m)
}
func (m *TrackInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TrackInfo proto.InternalMessageInfo

func (m *TrackInfo) GetTypes() TrackInfo_Type {
	if m != nil {
		return m.Types
	}
	return TrackInfo_VIDEO
}

type GetInfoRequest struct {
	// quick hash of a media. For example: "media/1111-2222-3333-4444/info".
	MediaHash            string   `protobuf:"bytes,1,opt,name=media_hash,json=mediaHash,proto3" json:"media_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoRequest) Reset()         { *m = GetInfoRequest{} }
func (m *GetInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetInfoRequest) ProtoMessage()    {}
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7bdbb3b37c87733, []int{2}
}

func (m *GetInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoRequest.Unmarshal(m, b)
}
func (m *GetInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoRequest.Merge(m, src)
}
func (m *GetInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetInfoRequest.Size(m)
}
func (m *GetInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoRequest proto.InternalMessageInfo

func (m *GetInfoRequest) GetMediaHash() string {
	if m != nil {
		return m.MediaHash
	}
	return ""
}

type UpdateInfoRequest struct {
	// Resource name of the parent resource where to create the book.
	// For example: "shelves/shelf1".
	MediaHash string `protobuf:"bytes,1,opt,name=media_hash,json=mediaHash,proto3" json:"media_hash,omitempty"`
	// The Book resource to be created. Client must not set the `Book.name` field.
	Info                 *Info    `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateInfoRequest) Reset()         { *m = UpdateInfoRequest{} }
func (m *UpdateInfoRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateInfoRequest) ProtoMessage()    {}
func (*UpdateInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7bdbb3b37c87733, []int{3}
}

func (m *UpdateInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateInfoRequest.Unmarshal(m, b)
}
func (m *UpdateInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateInfoRequest.Marshal(b, m, deterministic)
}
func (m *UpdateInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateInfoRequest.Merge(m, src)
}
func (m *UpdateInfoRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateInfoRequest.Size(m)
}
func (m *UpdateInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateInfoRequest proto.InternalMessageInfo

func (m *UpdateInfoRequest) GetMediaHash() string {
	if m != nil {
		return m.MediaHash
	}
	return ""
}

func (m *UpdateInfoRequest) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

type GetThumbInfoRequest struct {
	// use hash to get thumb info
	MediaHash string `protobuf:"bytes,1,opt,name=media_hash,json=mediaHash,proto3" json:"media_hash,omitempty"`
	// submit time length of the  media resource
	MediaLength          float64  `protobuf:"fixed64,2,opt,name=media_length,json=mediaLength,proto3" json:"media_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetThumbInfoRequest) Reset()         { *m = GetThumbInfoRequest{} }
func (m *GetThumbInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetThumbInfoRequest) ProtoMessage()    {}
func (*GetThumbInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7bdbb3b37c87733, []int{4}
}

func (m *GetThumbInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetThumbInfoRequest.Unmarshal(m, b)
}
func (m *GetThumbInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetThumbInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetThumbInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetThumbInfoRequest.Merge(m, src)
}
func (m *GetThumbInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetThumbInfoRequest.Size(m)
}
func (m *GetThumbInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetThumbInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetThumbInfoRequest proto.InternalMessageInfo

func (m *GetThumbInfoRequest) GetMediaHash() string {
	if m != nil {
		return m.MediaHash
	}
	return ""
}

func (m *GetThumbInfoRequest) GetMediaLength() float64 {
	if m != nil {
		return m.MediaLength
	}
	return 0
}

type GetThumbInfoResponse struct {
	Error     *status.Status `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	MediaHash string         `protobuf:"bytes,2,opt,name=media_hash,json=mediaHash,proto3" json:"media_hash,omitempty"`
	// tell the client what timestamps screenshot we have
	Timestamp []int64 `protobuf:"varint,3,rep,packed,name=timestamp,proto3" json:"timestamp,omitempty"`
	// tell the client which thumb range we want
	ThumbNeed            []*GetThumbInfoResponse_TimeRange `protobuf:"bytes,4,rep,name=thumb_need,json=thumbNeed,proto3" json:"thumb_need,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *GetThumbInfoResponse) Reset()         { *m = GetThumbInfoResponse{} }
func (m *GetThumbInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetThumbInfoResponse) ProtoMessage()    {}
func (*GetThumbInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7bdbb3b37c87733, []int{5}
}

func (m *GetThumbInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetThumbInfoResponse.Unmarshal(m, b)
}
func (m *GetThumbInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetThumbInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetThumbInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetThumbInfoResponse.Merge(m, src)
}
func (m *GetThumbInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetThumbInfoResponse.Size(m)
}
func (m *GetThumbInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetThumbInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetThumbInfoResponse proto.InternalMessageInfo

func (m *GetThumbInfoResponse) GetError() *status.Status {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetThumbInfoResponse) GetMediaHash() string {
	if m != nil {
		return m.MediaHash
	}
	return ""
}

func (m *GetThumbInfoResponse) GetTimestamp() []int64 {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *GetThumbInfoResponse) GetThumbNeed() []*GetThumbInfoResponse_TimeRange {
	if m != nil {
		return m.ThumbNeed
	}
	return nil
}

// time range is used to tell the client the screenshot range
type GetThumbInfoResponse_TimeRange struct {
	// Range begin time
	Begin float64 `protobuf:"fixed64,1,opt,name=begin,proto3" json:"begin,omitempty"`
	// Range end time
	End float64 `protobuf:"fixed64,2,opt,name=end,proto3" json:"end,omitempty"`
	// screenshot time interval
	Interval             float64  `protobuf:"fixed64,3,opt,name=interval,proto3" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetThumbInfoResponse_TimeRange) Reset()         { *m = GetThumbInfoResponse_TimeRange{} }
func (m *GetThumbInfoResponse_TimeRange) String() string { return proto.CompactTextString(m) }
func (*GetThumbInfoResponse_TimeRange) ProtoMessage()    {}
func (*GetThumbInfoResponse_TimeRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7bdbb3b37c87733, []int{5, 0}
}

func (m *GetThumbInfoResponse_TimeRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetThumbInfoResponse_TimeRange.Unmarshal(m, b)
}
func (m *GetThumbInfoResponse_TimeRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetThumbInfoResponse_TimeRange.Marshal(b, m, deterministic)
}
func (m *GetThumbInfoResponse_TimeRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetThumbInfoResponse_TimeRange.Merge(m, src)
}
func (m *GetThumbInfoResponse_TimeRange) XXX_Size() int {
	return xxx_messageInfo_GetThumbInfoResponse_TimeRange.Size(m)
}
func (m *GetThumbInfoResponse_TimeRange) XXX_DiscardUnknown() {
	xxx_messageInfo_GetThumbInfoResponse_TimeRange.DiscardUnknown(m)
}

var xxx_messageInfo_GetThumbInfoResponse_TimeRange proto.InternalMessageInfo

func (m *GetThumbInfoResponse_TimeRange) GetBegin() float64 {
	if m != nil {
		return m.Begin
	}
	return 0
}

func (m *GetThumbInfoResponse_TimeRange) GetEnd() float64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *GetThumbInfoResponse_TimeRange) GetInterval() float64 {
	if m != nil {
		return m.Interval
	}
	return 0
}

type Thumb struct {
	// Image content
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// Image file ext
	Ext                  string   `protobuf:"bytes,2,opt,name=ext,proto3" json:"ext,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Thumb) Reset()         { *m = Thumb{} }
func (m *Thumb) String() string { return proto.CompactTextString(m) }
func (*Thumb) ProtoMessage()    {}
func (*Thumb) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7bdbb3b37c87733, []int{6}
}

func (m *Thumb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Thumb.Unmarshal(m, b)
}
func (m *Thumb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Thumb.Marshal(b, m, deterministic)
}
func (m *Thumb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Thumb.Merge(m, src)
}
func (m *Thumb) XXX_Size() int {
	return xxx_messageInfo_Thumb.Size(m)
}
func (m *Thumb) XXX_DiscardUnknown() {
	xxx_messageInfo_Thumb.DiscardUnknown(m)
}

var xxx_messageInfo_Thumb proto.InternalMessageInfo

func (m *Thumb) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Thumb) GetExt() string {
	if m != nil {
		return m.Ext
	}
	return ""
}

type PutThumbRequest struct {
	MediaHash string `protobuf:"bytes,1,opt,name=media_hash,json=mediaHash,proto3" json:"media_hash,omitempty"`
	// thumb timestamp in media
	Timestamp            int64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Thumb                *Thumb   `protobuf:"bytes,3,opt,name=thumb,proto3" json:"thumb,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutThumbRequest) Reset()         { *m = PutThumbRequest{} }
func (m *PutThumbRequest) String() string { return proto.CompactTextString(m) }
func (*PutThumbRequest) ProtoMessage()    {}
func (*PutThumbRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7bdbb3b37c87733, []int{7}
}

func (m *PutThumbRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutThumbRequest.Unmarshal(m, b)
}
func (m *PutThumbRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutThumbRequest.Marshal(b, m, deterministic)
}
func (m *PutThumbRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutThumbRequest.Merge(m, src)
}
func (m *PutThumbRequest) XXX_Size() int {
	return xxx_messageInfo_PutThumbRequest.Size(m)
}
func (m *PutThumbRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutThumbRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutThumbRequest proto.InternalMessageInfo

func (m *PutThumbRequest) GetMediaHash() string {
	if m != nil {
		return m.MediaHash
	}
	return ""
}

func (m *PutThumbRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *PutThumbRequest) GetThumb() *Thumb {
	if m != nil {
		return m.Thumb
	}
	return nil
}

type GetThumbRequest struct {
	MediaHash string `protobuf:"bytes,1,opt,name=media_hash,json=mediaHash,proto3" json:"media_hash,omitempty"`
	// which thumb the client wants
	Timestamp            []int64  `protobuf:"varint,2,rep,packed,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetThumbRequest) Reset()         { *m = GetThumbRequest{} }
func (m *GetThumbRequest) String() string { return proto.CompactTextString(m) }
func (*GetThumbRequest) ProtoMessage()    {}
func (*GetThumbRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7bdbb3b37c87733, []int{8}
}

func (m *GetThumbRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetThumbRequest.Unmarshal(m, b)
}
func (m *GetThumbRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetThumbRequest.Marshal(b, m, deterministic)
}
func (m *GetThumbRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetThumbRequest.Merge(m, src)
}
func (m *GetThumbRequest) XXX_Size() int {
	return xxx_messageInfo_GetThumbRequest.Size(m)
}
func (m *GetThumbRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetThumbRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetThumbRequest proto.InternalMessageInfo

func (m *GetThumbRequest) GetMediaHash() string {
	if m != nil {
		return m.MediaHash
	}
	return ""
}

func (m *GetThumbRequest) GetTimestamp() []int64 {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type GetThumbResponse struct {
	Error     *status.Status `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	MediaHash string         `protobuf:"bytes,2,opt,name=media_hash,json=mediaHash,proto3" json:"media_hash,omitempty"`
	// thumb list (only int64 can be used in map)
	ThumbSet             map[int64]*Thumb `protobuf:"bytes,3,rep,name=thumb_set,json=thumbSet,proto3" json:"thumb_set,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetThumbResponse) Reset()         { *m = GetThumbResponse{} }
func (m *GetThumbResponse) String() string { return proto.CompactTextString(m) }
func (*GetThumbResponse) ProtoMessage()    {}
func (*GetThumbResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7bdbb3b37c87733, []int{9}
}

func (m *GetThumbResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetThumbResponse.Unmarshal(m, b)
}
func (m *GetThumbResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetThumbResponse.Marshal(b, m, deterministic)
}
func (m *GetThumbResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetThumbResponse.Merge(m, src)
}
func (m *GetThumbResponse) XXX_Size() int {
	return xxx_messageInfo_GetThumbResponse.Size(m)
}
func (m *GetThumbResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetThumbResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetThumbResponse proto.InternalMessageInfo

func (m *GetThumbResponse) GetError() *status.Status {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetThumbResponse) GetMediaHash() string {
	if m != nil {
		return m.MediaHash
	}
	return ""
}

func (m *GetThumbResponse) GetThumbSet() map[int64]*Thumb {
	if m != nil {
		return m.ThumbSet
	}
	return nil
}

func init() {
	proto.RegisterEnum("sagittarius.media.v1.TrackInfo_Type", TrackInfo_Type_name, TrackInfo_Type_value)
	proto.RegisterType((*Info)(nil), "sagittarius.media.v1.Info")
	proto.RegisterType((*TrackInfo)(nil), "sagittarius.media.v1.TrackInfo")
	proto.RegisterType((*GetInfoRequest)(nil), "sagittarius.media.v1.GetInfoRequest")
	proto.RegisterType((*UpdateInfoRequest)(nil), "sagittarius.media.v1.UpdateInfoRequest")
	proto.RegisterType((*GetThumbInfoRequest)(nil), "sagittarius.media.v1.GetThumbInfoRequest")
	proto.RegisterType((*GetThumbInfoResponse)(nil), "sagittarius.media.v1.GetThumbInfoResponse")
	proto.RegisterType((*GetThumbInfoResponse_TimeRange)(nil), "sagittarius.media.v1.GetThumbInfoResponse.TimeRange")
	proto.RegisterType((*Thumb)(nil), "sagittarius.media.v1.Thumb")
	proto.RegisterType((*PutThumbRequest)(nil), "sagittarius.media.v1.PutThumbRequest")
	proto.RegisterType((*GetThumbRequest)(nil), "sagittarius.media.v1.GetThumbRequest")
	proto.RegisterType((*GetThumbResponse)(nil), "sagittarius.media.v1.GetThumbResponse")
	proto.RegisterMapType((map[int64]*Thumb)(nil), "sagittarius.media.v1.GetThumbResponse.ThumbSetEntry")
}

func init() { proto.RegisterFile("media/v1/media.proto", fileDescriptor_d7bdbb3b37c87733) }

var fileDescriptor_d7bdbb3b37c87733 = []byte{
	// 790 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdd, 0x6e, 0xeb, 0x44,
	0x10, 0x66, 0xed, 0xf8, 0x9c, 0x64, 0x52, 0xce, 0x09, 0x4b, 0xa4, 0x13, 0xf9, 0xb4, 0x22, 0xdd,
	0x96, 0x36, 0xed, 0x85, 0xad, 0xa4, 0x48, 0x40, 0xee, 0xa8, 0x1a, 0xb5, 0x95, 0xa0, 0x29, 0x6e,
	0x0a, 0x15, 0x17, 0x54, 0x9b, 0x66, 0x9b, 0x58, 0x4d, 0x6c, 0x63, 0x6f, 0x22, 0x42, 0x55, 0x09,
	0x7a, 0xc5, 0x1d, 0x48, 0x3c, 0x02, 0x8f, 0xc4, 0x2b, 0xf0, 0x10, 0x5c, 0xa2, 0x1d, 0x3b, 0x49,
	0x53, 0xf2, 0x07, 0xe2, 0x6e, 0x77, 0x66, 0xfc, 0x7d, 0xdf, 0xcc, 0xce, 0x8c, 0x21, 0xdf, 0x13,
	0x2d, 0x97, 0xdb, 0x83, 0xb2, 0x8d, 0x07, 0x2b, 0x08, 0x7d, 0xe9, 0xd3, 0x7c, 0xc4, 0xdb, 0xae,
	0x94, 0x3c, 0x74, 0xfb, 0x91, 0x15, 0x3b, 0x06, 0x65, 0x73, 0xbd, 0xed, 0xfb, 0xed, 0xae, 0xb0,
	0x79, 0xe0, 0xda, 0xdc, 0xf3, 0x7c, 0xc9, 0xa5, 0xeb, 0x7b, 0x51, 0xfc, 0x8d, 0xf9, 0x26, 0xf1,
	0x86, 0xc1, 0x8d, 0x1d, 0x49, 0x2e, 0xfb, 0x89, 0x83, 0x7d, 0x0b, 0xa9, 0x53, 0xef, 0xd6, 0xa7,
	0x1b, 0x00, 0x08, 0x75, 0xdd, 0xe1, 0x51, 0xa7, 0x40, 0x8a, 0xa4, 0x94, 0x71, 0x32, 0x68, 0x39,
	0xe1, 0x51, 0x87, 0x7e, 0x0c, 0x2f, 0x64, 0xc8, 0x6f, 0xee, 0xa2, 0x82, 0x56, 0xd4, 0x4b, 0xd9,
	0xca, 0x07, 0xd6, 0x2c, 0x11, 0x56, 0x43, 0xc5, 0x28, 0x3c, 0x27, 0x09, 0x67, 0x3f, 0x40, 0x66,
	0x6c, 0xa4, 0x55, 0x30, 0xe4, 0x30, 0x10, 0x11, 0xe2, 0xbf, 0xaa, 0x6c, 0x2f, 0x01, 0xb1, 0x1a,
	0xc3, 0x40, 0x38, 0xf1, 0x27, 0xac, 0x0c, 0x29, 0x75, 0xa5, 0x19, 0x30, 0xbe, 0x3a, 0x3d, 0xaa,
	0xd5, 0x73, 0xef, 0xa8, 0xe3, 0x67, 0x97, 0x47, 0xa7, 0xf5, 0x1c, 0xa1, 0x69, 0x48, 0x35, 0x6a,
	0x57, 0x8d, 0x9c, 0xa6, 0x8c, 0xf5, 0xc6, 0x49, 0xcd, 0xc9, 0xe9, 0xcc, 0x86, 0x57, 0xc7, 0x42,
	0xa2, 0x1c, 0xf1, 0x5d, 0x5f, 0x44, 0x72, 0x49, 0x96, 0xac, 0x09, 0xef, 0x5d, 0x06, 0x2d, 0x2e,
	0xc5, 0xea, 0xdf, 0x50, 0x0b, 0x52, 0xae, 0x77, 0xeb, 0x17, 0xb4, 0x22, 0x29, 0x65, 0x2b, 0xe6,
	0xec, 0x94, 0x10, 0x0f, 0xe3, 0xd8, 0xd7, 0xf0, 0xfe, 0xb1, 0x90, 0x8d, 0x4e, 0xbf, 0xd7, 0xfc,
	0x17, 0x2c, 0x9b, 0xb0, 0x16, 0xbb, 0xbb, 0xc2, 0x6b, 0xcb, 0x0e, 0xb2, 0x11, 0x27, 0x8b, 0xb6,
	0xcf, 0xd1, 0xc4, 0x7e, 0xd7, 0x20, 0x3f, 0x8d, 0x1c, 0x05, 0xbe, 0x17, 0x09, 0x5a, 0x02, 0x43,
	0x84, 0xa1, 0x1f, 0x22, 0x6a, 0xb6, 0x42, 0xad, 0xb8, 0x17, 0xac, 0x30, 0xb8, 0xb1, 0x2e, 0xb0,
	0x17, 0x9c, 0x38, 0xe0, 0x99, 0x08, 0xed, 0xb9, 0x88, 0x75, 0xc8, 0x48, 0xb7, 0x27, 0x22, 0xc9,
	0x7b, 0x41, 0x41, 0x2f, 0xea, 0x25, 0xdd, 0x99, 0x18, 0xe8, 0x05, 0x80, 0x54, 0xdc, 0xd7, 0x9e,
	0x10, 0xad, 0x42, 0x0a, 0xdb, 0xe4, 0xa3, 0xd9, 0xe5, 0x98, 0x25, 0xd3, 0x6a, 0xb8, 0x3d, 0xe1,
	0x70, 0xaf, 0x2d, 0x9c, 0x0c, 0xe2, 0x9c, 0x09, 0xd1, 0x32, 0xeb, 0x90, 0x19, 0xdb, 0x69, 0x1e,
	0x8c, 0xa6, 0x68, 0xbb, 0x1e, 0x26, 0x42, 0x9c, 0xf8, 0x42, 0x73, 0xa0, 0x0b, 0xaf, 0x95, 0x54,
	0x44, 0x1d, 0xa9, 0x09, 0x69, 0xd7, 0x93, 0x22, 0x1c, 0xf0, 0x6e, 0x41, 0x47, 0xf3, 0xf8, 0xce,
	0x0e, 0xc0, 0x40, 0x6a, 0x5a, 0x80, 0x97, 0x01, 0x1f, 0x76, 0x7d, 0xde, 0x42, 0xb8, 0x35, 0x67,
	0x74, 0x45, 0xc0, 0xef, 0x65, 0x92, 0xbe, 0x3a, 0xb2, 0x9f, 0x08, 0xbc, 0x3e, 0xef, 0xc7, 0x9a,
	0x57, 0x7c, 0xb0, 0xa9, 0x5a, 0x29, 0xa8, 0xa9, 0x5a, 0x95, 0xc1, 0xc0, 0x1c, 0x51, 0x5e, 0xb6,
	0xf2, 0x76, 0xce, 0x20, 0x20, 0x5f, 0x1c, 0xc9, 0xce, 0xe0, 0xf5, 0xa8, 0x6c, 0xff, 0x4d, 0xc2,
	0xf4, 0x73, 0xb1, 0x9f, 0x35, 0xc8, 0x4d, 0x00, 0xff, 0xef, 0x56, 0xf9, 0x12, 0xe2, 0x47, 0xbc,
	0x8e, 0x84, 0xc4, 0x56, 0x59, 0xda, 0x0b, 0x93, 0x3e, 0x50, 0xb7, 0x0b, 0x21, 0x6b, 0x9e, 0x0c,
	0x87, 0x4e, 0x5a, 0x26, 0x57, 0xf3, 0x0a, 0xde, 0x9d, 0x72, 0xa9, 0x77, 0xba, 0x13, 0x43, 0x94,
	0xaa, 0x3b, 0xea, 0xa8, 0xca, 0x3a, 0xe0, 0xdd, 0xbe, 0x48, 0x86, 0x71, 0x71, 0x59, 0x31, 0xb2,
	0xaa, 0x7d, 0x42, 0x2a, 0xbf, 0x18, 0x60, 0x7c, 0xa1, 0xbc, 0x34, 0x80, 0x97, 0xc9, 0xc6, 0xa0,
	0xdb, 0x73, 0xe5, 0x3e, 0x19, 0x5b, 0x73, 0xc1, 0xbc, 0xb3, 0xad, 0xc7, 0x3f, 0xfe, 0xfc, 0x4d,
	0xdb, 0xa0, 0x6f, 0xc7, 0x0b, 0xdc, 0xbe, 0x9f, 0xd4, 0xec, 0xc1, 0x56, 0xeb, 0x80, 0x0e, 0x01,
	0x26, 0x2b, 0x87, 0xee, 0xce, 0x86, 0xfb, 0xc7, 0x52, 0x5a, 0xc8, 0xbb, 0x83, 0xbc, 0x45, 0xb6,
	0x88, 0xb7, 0x4a, 0xf6, 0xe9, 0xaf, 0x04, 0xd6, 0x9e, 0x4e, 0x22, 0xdd, 0x5b, 0x65, 0x5a, 0x63,
	0xfe, 0xfd, 0xd5, 0x07, 0x9b, 0xed, 0xa1, 0x9e, 0x2d, 0xba, 0x39, 0x47, 0x0f, 0xbe, 0x70, 0x5c,
	0x8d, 0x47, 0x02, 0xe9, 0x11, 0x06, 0xfd, 0x70, 0x59, 0xc3, 0xc4, 0x52, 0x76, 0x56, 0xeb, 0x2b,
	0xb6, 0x8b, 0x32, 0x36, 0xd9, 0xfa, 0x22, 0x19, 0xaa, 0x2e, 0x3f, 0x12, 0x48, 0x8f, 0xa6, 0x7d,
	0x9e, 0x88, 0x67, 0xdb, 0xc0, 0x9c, 0x31, 0x29, 0xec, 0x53, 0x24, 0x3c, 0x60, 0xd6, 0xc2, 0xbc,
	0xef, 0xe3, 0x39, 0x71, 0x5b, 0x0f, 0x76, 0x3f, 0x50, 0xfb, 0xa7, 0x4a, 0xf6, 0x0f, 0xcb, 0xf0,
	0x86, 0xbb, 0x33, 0x99, 0x0f, 0x01, 0x3b, 0xf5, 0x5c, 0xfd, 0xbc, 0xcf, 0xc9, 0x37, 0x06, 0xda,
	0xff, 0x22, 0xa4, 0xf9, 0x02, 0xff, 0xe7, 0x07, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x4f, 0xc6,
	0xb3, 0xc3, 0x34, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MediaClient is the client API for Media service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MediaClient interface {
	//
	GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*Info, error)
	//
	UpdateInfo(ctx context.Context, in *UpdateInfoRequest, opts ...grpc.CallOption) (*Info, error)
	// Query thumb exist by media identity
	GetThumbInfo(ctx context.Context, in *GetThumbInfoRequest, opts ...grpc.CallOption) (*GetThumbInfoResponse, error)
	// Query thumb list
	GetThumb(ctx context.Context, in *GetThumbRequest, opts ...grpc.CallOption) (*GetThumbResponse, error)
	// Upload thumb
	PutThumb(ctx context.Context, in *PutThumbRequest, opts ...grpc.CallOption) (*status.Status, error)
}

type mediaClient struct {
	cc *grpc.ClientConn
}

func NewMediaClient(cc *grpc.ClientConn) MediaClient {
	return &mediaClient{cc}
}

func (c *mediaClient) GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*Info, error) {
	out := new(Info)
	err := c.cc.Invoke(ctx, "/sagittarius.media.v1.Media/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mediaClient) UpdateInfo(ctx context.Context, in *UpdateInfoRequest, opts ...grpc.CallOption) (*Info, error) {
	out := new(Info)
	err := c.cc.Invoke(ctx, "/sagittarius.media.v1.Media/UpdateInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mediaClient) GetThumbInfo(ctx context.Context, in *GetThumbInfoRequest, opts ...grpc.CallOption) (*GetThumbInfoResponse, error) {
	out := new(GetThumbInfoResponse)
	err := c.cc.Invoke(ctx, "/sagittarius.media.v1.Media/GetThumbInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mediaClient) GetThumb(ctx context.Context, in *GetThumbRequest, opts ...grpc.CallOption) (*GetThumbResponse, error) {
	out := new(GetThumbResponse)
	err := c.cc.Invoke(ctx, "/sagittarius.media.v1.Media/GetThumb", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mediaClient) PutThumb(ctx context.Context, in *PutThumbRequest, opts ...grpc.CallOption) (*status.Status, error) {
	out := new(status.Status)
	err := c.cc.Invoke(ctx, "/sagittarius.media.v1.Media/PutThumb", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MediaServer is the server API for Media service.
type MediaServer interface {
	//
	GetInfo(context.Context, *GetInfoRequest) (*Info, error)
	//
	UpdateInfo(context.Context, *UpdateInfoRequest) (*Info, error)
	// Query thumb exist by media identity
	GetThumbInfo(context.Context, *GetThumbInfoRequest) (*GetThumbInfoResponse, error)
	// Query thumb list
	GetThumb(context.Context, *GetThumbRequest) (*GetThumbResponse, error)
	// Upload thumb
	PutThumb(context.Context, *PutThumbRequest) (*status.Status, error)
}

func RegisterMediaServer(s *grpc.Server, srv MediaServer) {
	s.RegisterService(&_Media_serviceDesc, srv)
}

func _Media_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MediaServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sagittarius.media.v1.Media/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MediaServer).GetInfo(ctx, req.(*GetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Media_UpdateInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MediaServer).UpdateInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sagittarius.media.v1.Media/UpdateInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MediaServer).UpdateInfo(ctx, req.(*UpdateInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Media_GetThumbInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetThumbInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MediaServer).GetThumbInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sagittarius.media.v1.Media/GetThumbInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MediaServer).GetThumbInfo(ctx, req.(*GetThumbInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Media_GetThumb_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetThumbRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MediaServer).GetThumb(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sagittarius.media.v1.Media/GetThumb",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MediaServer).GetThumb(ctx, req.(*GetThumbRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Media_PutThumb_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutThumbRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MediaServer).PutThumb(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sagittarius.media.v1.Media/PutThumb",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MediaServer).PutThumb(ctx, req.(*PutThumbRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Media_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sagittarius.media.v1.Media",
	HandlerType: (*MediaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfo",
			Handler:    _Media_GetInfo_Handler,
		},
		{
			MethodName: "UpdateInfo",
			Handler:    _Media_UpdateInfo_Handler,
		},
		{
			MethodName: "GetThumbInfo",
			Handler:    _Media_GetThumbInfo_Handler,
		},
		{
			MethodName: "GetThumb",
			Handler:    _Media_GetThumb_Handler,
		},
		{
			MethodName: "PutThumb",
			Handler:    _Media_PutThumb_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "media/v1/media.proto",
}
